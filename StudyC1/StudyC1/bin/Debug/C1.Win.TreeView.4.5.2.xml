<?xml version="1.0"?>
<doc>
    <assembly>
        <name>C1.Win.TreeView.4.5.2</name>
    </assembly>
    <members>
        <member name="T:C1.Reflection.AssemblyLoadingException">
            <summary>
            Represents errors that occur during assembly loading.
            </summary>
        </member>
        <member name="P:C1.Reflection.AssemblyLoadingException.Assembly">
            <summary>
            Assembly full name.
            </summary>
        </member>
        <member name="M:C1.Reflection.AssemblyLoader.CreateInstance(System.Type)">
            <summary>
            Creates new instance of the specified type.
            </summary>
            <param name="type">specified type.</param>
            <returns>instance of the specified type.</returns>
        </member>
        <member name="M:C1.Reflection.AssemblyLoader.CreateInstance(System.String,System.Object[])">
            <summary>
            Creates new instance of the specified type name.
            </summary>
            <param name="name">specified type name.</param>
            <param name="args">constructor arguments.</param>
            <returns>instance of the specified type.</returns>
        </member>
        <member name="M:C1.Reflection.AssemblyLoader.LoadAssembly(System.String)">
            <summary>
            Loads assembly.
            </summary>
            <param name="assemblyName">assembly name.</param>
            <example>assemblyFullName = "C1.Win.ExpressionEditor.4"</example>
            <returns></returns>
        </member>
        <member name="M:C1.Reflection.AssemblyLoader.LoadType(System.String)">
            <summary>
            Loads type from assembly.
            </summary>
            <param name="typeFullName">full type name.</param>
            <example>typeFullName = "C1.Win.ExpressionEditor.C1ExpressionEditor"</example>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.C1FrameworkHelper.ApplyStyle(C1.Win.C1Themes.Shared.C1ThemeProxy,C1.Framework.Style,System.String)">
            <summary>
            fills style props with values from the specified path
            </summary>
            <param name="tp"></param>
            <param name="style"></param>
            <param name="path"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.C1FrameworkHelper.ApplyHotStyle(C1.Win.C1Themes.Shared.C1ThemeProxy,C1.Framework.Style,System.String)">
            <summary>
            
            </summary>
            <param name="tp"></param>
            <param name="style">reference to the framework style, for which hot style should be applied</param>
            <param name="path">xml path to the hot style</param>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.Dock_SizeMode">
            <summary>
            Used in:
            C1DockingTab\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Dock_SizeMode.Normal">
            <summary>
            Borders are shown only for headers of columns.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Dock_SizeMode.Fit">
            <summary>
            No borders.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Dock_SizeMode.FillToEnd">
            <summary>
            Only left and right borders of columns are shown.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum">
            <summary>
            Used in:
            C1TreeView\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum.ColumnsHeaderOnly">
            <summary>
            Borders are shown only for headers of columns.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum.None">
            <summary>
            No borders.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum.ColumnsLineOnly">
            <summary>
            Only left and right borders of columns are shown.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum.Full">
            <summary>
            Borders are shown for all cells.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.CheckBoxStyleEnum">
            <summary>
            Used in:
            C1TreeView\Style
            C1MultiSelect\C1CheckList\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.System">
            <summary>
            Standard system view.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2007Black">
            <summary>
            Like a MS Office 2007 Black.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2007Blue">
            <summary>
            Like a MS Office 2007 Blue.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2007Silver">
            <summary>
            Like a MS Office 2007 Silver.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2010Black">
            <summary>
            Like a MS Office 2010 Black.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2010Blue">
            <summary>
            Like a MS Office 2010 Blue.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2010Silver">
            <summary>
            Like a MS Office 2010 Silver.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2013">
            <summary>
            Like a MS Office 2013.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Windows10">
            <summary>
            Like a Windows 10.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum">
            <summary>
            Used in:
            C1TrueDBGrid\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum.Center">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum.Stretch">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum.Tile">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum.Fill">
            <summary>
            The image is stretched and aspect ratio is saved.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.BorderType">
            <summary>
            Used in:
            C1TrueDBGrid\GridBorder
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.None">
            <summary>
            No borders.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Flat">
            <summary>
            Borders have a Flat appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Raised">
            <summary>
            Borders have a 3D raised appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Inset">
            <summary>
            Borders have a 3D inset appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Groove">
            <summary>
            A line around the inside of the border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Fillet">
            <summary>
            A fillet type border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.RaisedBevel">
            <summary>
            Borders have a 3D raised with a bevel.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.InsetBevel">
            <summary>
            Borders have a 3D inset with a bevel.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ForegroundPicturePosition">
            <summary>
            Used in:
            C1TrueDBGrid\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.Near">
            <summary>
            Image is rendered in the near side of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.Far">
            <summary>
            Image is rendered in the far side of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.LeftOfText">
            <summary>
            Image is rendered to the left of any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.RightOfText">
            <summary>
            Image is rendered to the right of any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.TopOfText">
            <summary>
            Image is rendered on top of any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.BottomOfText">
            <summary>
            Image is rendered below any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.PictureOnly">
            <summary>
            Text is not displayed.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.TextOnly">
            <summary>
            Image is not displayed.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.AlignHorzEnum">
            <summary>
            Used in:
            C1TrueDBGrid\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.General">
            <summary>
            Text is aligned Near and numeric values Far
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.Near">
            <summary>
            Text is aligned to the left.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.Center">
            <summary>
            Text is aligned centered.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.Far">
            <summary>
            Text is aligned to the right.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.Justify">
            <summary>
            Text is aligned with respect to the cells boundries.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.AlignVertEnum">
            <summary>
            Used in:
            C1TrueDBGrid\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignVertEnum.Top">
            <summary>
            Text is rendered at the top of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignVertEnum.Center">
            <summary>
            Text is rendered at the center of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignVertEnum.Bottom">
            <summary>
            Text is rendered at the bottom of the cell.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.LineStyle">
            <summary>
            Used in:
            C1TrueDBGrid\GridLines
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.None">
            <summary>
            No line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.Single">
            <summary>
            Single line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.Double">
            <summary>
            Double line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.Raised">
            <summary>
            Line with 3D raised appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.Inset">
            <summary>
            Line with 3D inset appearance.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.PaletteType">
            <summary>
            Used in:
            C1Schedule\PaletteType
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.PaletteType.Office2007">
            <summary>
            Office 2007 palette includes back and border colors 
            of free and working hours and days, day headers, grid borders 
            and calendar tabs. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.PaletteType.Office2010">
            <summary>
            Office 2010 palette includes back and border colors 
            of free and working hours and days, day headers, grid borders 
            and calendar tabs. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.PaletteType.Office2016">
            <summary>
            Office 2016 palette includes accent color to use in calendar headers and additional darker color for current day.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.PaletteType.Office2016Dark">
            <summary>
            Office 2016 dark palette includes accent color to use in calendar headers and additional darker color for current day.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.GroupTabStyle">
            <summary>
            Used in:
            C1Schedule\GroupTabStyle
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GroupTabStyle.FullWidth">
            <summary>
            Group headers of rectangular shape take the full width of the corresponding group.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GroupTabStyle.Office2007">
            <summary>
            Group headers of Office2007 appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GroupTabStyle.Office2016">
            <summary>
            Group headers of Office2016 appearance.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.WeekTabStyle">
            <summary>
            Used in:
            C1Schedule\WeekTabStyle
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.WeekTabStyle.Office2007">
            <summary>
            Week tabs of Office2007 appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.WeekTabStyle.Office2016">
            <summary>
            Week tabs of Office2016 appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.None">
            <summary>
            Use no background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Automatic">
            <summary>
            Use a gradient that matches the current system Visual Style.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Silver">
            <summary>
            Use a silver background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Blue">
            <summary>
            Use a blue background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Gold">
            <summary>
            Use a gold background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Olive">
            <summary>
            Use an olive background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Vista">
            <summary>
            Use the Vista-style background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.None">
            <summary>
            No gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.Horizontal">
            <summary>
            Horizontal gradient (left to right).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.Vertical">
            <summary>
            Vertical gradient (top to bottom).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.DiagonalDown">
            <summary>
            Diagonal gradient (left-top to right-bottom).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.DiagonalUp">
            <summary>
            Diagonal gradient (left-bottom to right-top).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.Radial">
            <summary>
            Radial gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.LeftTop">
            <summary>
            Image is vertically aligned at the top, 
            and horizontally aligned on the left. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.CenterTop">
            <summary>
            Image is vertically aligned at the top, 
            and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.RightTop">
            <summary>
            Image is vertically aligned at the top, 
            and horizontally aligned on the right. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.LeftCenter">
            <summary>
            Image is vertically aligned in the middle, 
            and horizontally aligned on the left. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.CenterCenter">
            <summary>
            Image is vertically aligned in the middle, 
            and horizontally aligned at the center. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.RightCenter">
            <summary>
            Image is vertically aligned in the middle, 
            and horizontally aligned on the right. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.LeftBottom">
            <summary>
            Image is vertically aligned at the bottom, 
            and horizontally aligned on the left. 		
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.CenterBottom">
            <summary>
            Image is vertically aligned at the bottom, 
            and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.RightBottom">
            <summary>
            Image is vertically aligned at the bottom, 
            and horizontally aligned on the right. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Clip">
            <summary>
            Use the image's original size, clipping it to the display area if necessary.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Stretch">
            <summary>
            Stretch the image to fill the display area. 
            This mode will usually change the image's aspect ratio.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Scale">
            <summary>
            Scale the image to fit the display area. 
            This mode may increase or reduce the size of the image 
            while maintaining its aspect ratio.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Tile">
            <summary>
            Tile the image to fill the display area.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.TileStretch">
            <summary>
            Tile the image into the 3x3 matrix and stretch it to fill the display area.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.TileStretchHorizontal">
            <summary>
            Tile the image into the row of 3 images and stretch it to fill the display area.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.TileStretchVertical">
            <summary>
            Tile the image into the column of 3 images and stretch it to fill the display area.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Hide">
            <summary>
            Hide the image.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.NotSet">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.Near">
            <summary>
            Near.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.Far">
            <summary>
            Far.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.Spread">
            <summary>
            Spread.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TextDirection.Normal">
            <summary>
            Text is drawn in the horizontal direction, left to right.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TextDirection.Up">
            <summary>
            Text is draw vertically, from the bottom up.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TextDirection.Down">
            <summary>
            Text is draw vertically, from the top down.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.Left">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.Top">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.Right">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.Bottom">
            <summary>For internal use.</summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ImageSetEnum">
            <summary>
            Describes the image set used for toolbar images of the
            preview actions.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.Classic">
            <summary>
            Classic image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.Flat">
            <summary>
            Flat image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.XP">
            <summary>
            XP image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.XP2">
            <summary>
            XP alternative image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.XP3">
            <summary>
            XP second alternative image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.Adobe">
            <summary>
            Adobe image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.OsX">
            <summary>
            Os X image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.Original">
            <summary>
            Original (C1Preview "classic") image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderDirEnum.Both">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderDirEnum.Horizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderDirEnum.Vertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Flat">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Double">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Raised">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Inset">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Groove">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Fillet">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Dotted">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.TextOnly">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.ImageOnly">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.Overlay">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.Stack">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.LeftTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.LeftCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.LeftBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.CenterTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.CenterCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.CenterBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.RightTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.RightCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.RightBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.Scale">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.Stretch">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.Tile">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.Hide">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.TileStretch">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.LeftTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.LeftCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.LeftBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.CenterTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.CenterCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.CenterBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.RightTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.RightCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.RightBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.GeneralTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.GeneralCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.GeneralBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextDirectionEnum.Normal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextDirectionEnum.Up">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextDirectionEnum.Down">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextEffectEnum.Flat">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextEffectEnum.Raised">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextEffectEnum.Inset">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Lines">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Symbols">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.ButtonBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Leaf">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Complete">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Simple">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.CompleteLeaf">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.SimpleLeaf">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Light">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Heavy">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Solid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Raised">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Inset">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.ThickBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.TopBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.MiddleBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.BottomBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.TopLine">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.MiddleLine">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.BottomLine">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.Frame">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.HalfFrame">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Empty">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.SolidBrush">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Gradient">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Percent25">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Percent50">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Percent70">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.ForwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.BackwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.DiagonalCross">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Vertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Horizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.NarrowVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.NarrowHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Confetti">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.ZigZag">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Name">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Mode">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Calendar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Duration">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.DurationUnits">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Start">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Finish">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.PercentComplete">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Deadline">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.ConstraintType">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.ConstraintDate">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Predecessors">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.ResourceNames">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Notes">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.Solid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.Dash">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.Dot">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.DashDot">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.DashDotDot">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Azure">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Blue">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Green">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Orange">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Orchid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Red">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Teal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Violet">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeLightness.DarkGray">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeLightness.LightGray">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeLightness.White">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon365_ThemeLightness.Colorful">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon365_ThemeLightness.Black">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon365_ThemeLightness.DarkGray">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon365_ThemeLightness.White">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.CopyCurrentToCustom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Custom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Standard">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Office">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.GrayScale">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Apex">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Aspect">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Civic">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Concourse">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Equity">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Flow">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Foundry">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Median">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Metro">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Module">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Opulent">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Oriel">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Origin">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Paper">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Solstice">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Technic">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Trek">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Urban">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Verve">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.Horizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.HorizontalCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.Vertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.VerticalCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.Diagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.DiagonalCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.DiagonalBack">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.DiagonalBackCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.Radial">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.FromCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Horizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Vertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.ForwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.BackwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Cross">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DiagonalCross">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent05">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent10">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent20">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent25">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent30">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent40">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent50">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent60">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent70">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent75">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent80">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent90">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LightDownwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LightUpwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DarkDownwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DarkUpwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.WideDownwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.WideUpwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LightVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LightHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.NarrowVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.NarrowHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DarkVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DarkHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DashedDownwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DashedUpwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DashedHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DashedVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.SmallConfetti">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LargeConfetti">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.ZigZag">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Wave">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DiagonalBrick">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.HorizontalBrick">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Weave">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Plaid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Divot">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DottedGrid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DottedDiamond">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Shingle">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Trellis">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Sphere">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.SmallGrid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.SmallCheckerBoard">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LargeCheckerBoard">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.OutlinedDiamond">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.SolidDiamond">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Hide">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Left">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Right">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Top">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Bottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Center">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Scale">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Stretch">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Tile">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_RotationEnum.Rotate0">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_RotationEnum.Rotate90">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_RotationEnum.Rotate180">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_RotationEnum.Rotate270">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.NotSet">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Empty">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Solid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Raised">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Inset">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.RaisedBevel">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.InsetBevel">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Groove">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Fillet">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Double">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Dashed">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Opaque">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Custom">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.System">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2007Blue">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2007Black">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2007Silver">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2010Blue">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2010Black">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2010Silver">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Windows7">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.WinXPBlue">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.WinXPSilver">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.WinXPOlive">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Royale">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Yahoo">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Aero">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2003Blue">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2003Olive">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2003Silver">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.OfficeXP">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Classic">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.WindowsXP">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.None">
            <summary>
            Hides the border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.Solid">
            <summary>
            Specifies a solid line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.Dash">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.Dot">
            <summary>
            Specifies a line consisting of dots.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.DashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.DashDotDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.Solid">
            <summary>
            Specifies a solid line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.Dash">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.Dot">
            <summary>
            Specifies a line consisting of dots.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.DashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.DashDotDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.None">
            <summary>
            No gradient filling.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.Horizontal">
            <summary>
            From left (first color) to right (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.HorizontalCenter">
            <summary>
            From center (first color) to left and right (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.Vertical">
            <summary>
            From top (first color) to bottom (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.VerticalCenter">
            <summary>
            From center (first color) to top and bottom (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.Diagonal">
            <summary>
            From left-bottom (first color) to right-top (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.DiagonalCenter">
            <summary>
            From center (first color) to left-bottom and right-top (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.DiagonalBack">
            <summary>
            From left-top (first color) to right-bottom (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.DiagonalBackCenter">
            <summary>
            From center (first color) to left-top and right-bottom (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.Radial">
            <summary>
            From center (first color) to corners (second color) in radial direction.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.FromCenter">
            <summary>
            From center (first color) to corners (second color).
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.IC1ThemeControl.ThemeChanged(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeBrushBase">
            <summary>
            Abstract base class for all classes representing a brush in a theme.
            Use the <see cref="M:C1.Win.C1Themes.Shared.ThemeBrushBase.GetBrush(System.Drawing.Rectangle)"/> method to get an actual matching GDI+ brush.
            Classes derived from <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> override Equals() and
            GetHashCode() methods and compare objects by content rather than by references.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/>.
            </summary>
            <returns>The <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> this method creates.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Returns a GDI+ brush matching the theme brush.
            It is the caller's responsibility to dispose this brush when it is no longer needed.
            </summary>
            <param name="brushRect">The brush rectangle (used for gradient brushes).</param>
            <returns>The GDI+ <see cref="T:System.Drawing.Brush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.DependOnRect">
            <summary>
            Returns true if a GDI+ brush created for this theme brush depends on the rectangle
            passed to the <see cref="M:C1.Win.C1Themes.Shared.ThemeBrushBase.GetBrush(System.Drawing.Rectangle)"/> method. E.g. gradient brushes return
            true in this method while solid return false.
            </summary>
            <returns>True if the GDI+ brush depends on the application area, false otherwise.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.EncodeToString">
            <summary>
            Encodes this <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object to string.
            </summary>
            <returns>String represengin this <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.IsBrushesEqual(C1.Win.C1Themes.Shared.ThemeBrushBase,C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Checks whether the two <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> objects are equal by value
            (i.e. represent identically described theme brushes).
            </summary>
            <param name="tb1">First <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object.</param>
            <param name="tb2">Second <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object.</param>
            <returns>True if the two brushes are identical, or are both null.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.TryDecodeFromString(System.String,C1.Win.C1Themes.Shared.ThemeBrushBase@)">
            <summary>
            Create <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object from specified string.
            </summary>
            <param name="s">String representing <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object.</param>
            <param name="value"><see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object created from string.</param>
            <returns>True if string was successfully parsed, false otherwise.</returns>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeSolidBrush">
            <summary>
            Represents a solid theme brush.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a GDI+ <see cref="T:System.Drawing.SolidBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeSolidBrush"/> object.
            Can return null if color is not specified or transparent.
            </summary>
            <param name="brushRect">Target application area for the brush (ignored).</param>
            <returns>A <see cref="T:System.Drawing.SolidBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.DependOnRect">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeSolidBrush.Color">
            <summary>
            Gets or sets the color of this solid brush.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeGradientBrush">
            <summary>
            Abstract base class for gradient theme brushes.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeGradientBrush.DependOnRect">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeLinearBrush">
            <summary>
            Abstract base class for linear gradient theme brushes.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeLinearBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeLinearBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeLinearBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeLinearBrush.GammaCorrection">
            <summary>
            Gets or sets a value indicating whether gamma correction is enabled,
            same as LinearGradientBrush.GammaCorrection.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeLinearBrush.Angle">
            <summary>
            Gets or sets the angle, measured in degrees clockwise from the x-axis,
            of the gradient's orientation line. 
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush">
            <summary>
            Represents a linear gradient brush based on the starting and ending colors,
            and a <see cref="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.Blend"/> object.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush"/> object.
            </summary>
            <param name="brushRect">The gradient rectangle.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.StartColor">
            <summary>
            Gets or sets the starting gradient color.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.EndColor">
            <summary>
            Gets or sets the ending gradient color.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.Blend">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.Blend"/> object. Can be null.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush">
            <summary>
            Represents a multicolor linear gradient brush.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush"/> object.
            </summary>
            <param name="brushRect">Gradient brush rectangle.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.InterpolationColors">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> that defines a multicolor linear gradient.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeRadialBrush">
            <summary>
            Abstract base class for radial gradient theme brushes.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.CreateBrush(System.Drawing.Rectangle)">
            <summary>
            For internal use.
            </summary>
            <param name="brushRect"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.DependOnRect">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeRadialBrush.Center">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Point"/> structure that defines position
            of center point.
            (0,0) is the top-left corner, (100,100) is the bottom-right corner.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush">
            <summary>
            Represents a radial gradient brush based on center point,
            surrounding color and a <see cref="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.Blend"/> object.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a <see cref="T:System.Drawing.Drawing2D.PathGradientBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush"/> object.
            </summary>
            <param name="brushRect">The gradient rectangle.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.PathGradientBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.CenterColor">
            <summary>
            Gets or sets the color at the center of the radial gradient.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.SurroundColor">
            <summary>
            Gets or sets the surrounding color of the radial gradient.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.Blend">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.Blend"/> object. Can be null.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush">
            <summary>
            Represents a multicolor radial gradient brush.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a <see cref="T:System.Drawing.Drawing2D.PathGradientBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush"/> object.
            </summary>
            <param name="brushRect">The gradient rectangle.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.PathGradientBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.InterpolationColors">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> that defines this multicolor radiant gradient.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeBrushHelper.ForeignBrush">
            <summary>
            Gets or sets a brush object which is stored but not managed by this ThemeBrushHelper -
            i.e. it will not be disposed when this ThemeBrushHelper is disposed, or a new brush is
            assigned to it.
            Note that while the 'get' accessor is provided for this property, there is no need to use it -
            just use the <see cref="M:C1.Win.C1Themes.Shared.ThemeBrushHelper.GetBrush(System.Drawing.Rectangle)"/> method to get a usable GDI+ brush.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushHelper.CreateThemeBrushNoTransparentOrEmpty(C1.Win.C1Themes.Shared.C1ThemeProxy,System.String,C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Creates brush based on specified theme path.
            Returns defaultValue if brush can not be created or it is solid and color is transparent or empty.
            </summary>
            <param name="themeProxy"></param>
            <param name="path"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.IsBlendEqual(System.Drawing.Drawing2D.Blend,System.Drawing.Drawing2D.Blend)">
            <summary>
            For internal use.
            </summary>
            <param name="b1"></param>
            <param name="b2"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.IsColorBlendEqual(System.Drawing.Drawing2D.ColorBlend,System.Drawing.Drawing2D.ColorBlend)">
            <summary>
            For internal use.
            </summary>
            <param name="cb1"></param>
            <param name="cb2"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.GradientModeToAngle(C1.Win.C1Themes.Shared.GradientMode)">
            <summary>
            For internal use.
            </summary>
            <param name="gradientMode"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.AngleToGradientMode(System.Single)">
            <summary>
            For internal use.
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeVersions">
            <summary>
            Versions of c1theme XML.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_PlatformVersionPrefix">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_InitialFormatVersion">
            <summary>
            First public versions of C1Themes.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_NewBackgroundsFormatVersion">
            <summary>
            Version of theme XML when structure of BackgroundProp was changed.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_NewRibbonFormatVersion">
            <summary>
            Version of theme XML when structure of C1Ribbon theme was changed
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.Design.ExpressionEditorUITypeEditor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.Design.ExpressionEditorUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.TreeView.Design.ExpressionEditorUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:C1.Win.TreeView.Design.DisplayFieldNameForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.Design.DisplayFieldNameForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.TreeView.Design.DisplayFieldNameForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.Design.ImageListForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.Design.ImageListForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.TreeView.Design.ImageListForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.Design.TreeNodesForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.Design.TreeNodesForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.TreeView.Design.TreeNodesForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.UI.ExpressionsForm">
            <summary>
            Represents a window or dialog designed for easy set-up expressions for different node levels.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.UI.ExpressionsForm.#ctor(C1.Win.TreeView.C1TreeView,System.String[])">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Win.TreeView.UI.ExpressionsForm"/> class.
            </summary>
            <param name="treeView">Owner tree view.</param>
            <param name="expressions">initial expressions.</param>
        </member>
        <member name="P:C1.Win.TreeView.UI.ExpressionsForm.Expressions">
            <summary>
            Gets expression strings.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.UI.ExpressionsForm.ThemeChanged(System.Object)">
            <summary>
            Called then application theme is changed.
            </summary>
            <param name="theme">The theme object</param>
        </member>
        <member name="M:C1.Win.TreeView.UI.ExpressionsForm.OnShown(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Form.Shown event.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="F:C1.Win.TreeView.UI.ExpressionsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.UI.ExpressionsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.TreeView.UI.ExpressionsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.SelectionMode">
            <summary>
            Defines the selection behavior for a control. 
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.SelectionMode.Single">
            <summary>
            The user can select only one item at a time. 
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.SelectionMode.Radio">
            <summary>
            The user can select only one item at a time and deselect the item while holding down the ctrl modifier key.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.SelectionMode.Multiple">
            <summary>
            The user can select multiple items without holding down a modifier key.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.SelectionMode.Extended">
            <summary>
            The user can select multiple consecutive items while holding down the corresponding modifier key.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.ExpressionException">
            <summary>
            Represents errors that occur during operations with C1ExpressionEditor.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the C1.Win.TreeView.ExpressionException class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy">
            <summary>
            A proxy class that works with a ExpressionEditorCollection
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.SetDataSource(System.Object)">
            <summary>
            Gets actual data source for the expression editors.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.SetDataMember(System.String)">
            <summary>
            Gets actual data member for the expression editors.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.SetItemContext(System.Object)">
            <summary>
            Gets actual data member for the expression editors.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.Update(System.String,System.String)">
            <summary>
            Updates expression property of the expression editor related to the specified column.
            </summary>
            <param name="columnName">specified column name.</param>
            <param name="expression">new expression.</param>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.Remove(System.String)">
            <summary>
            Removes the expression editor related to the specified column.
            </summary>
            <param name="columnName">specified column name.</param>
            <returns>true if success, false if failed.</returns>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.Clear">
            <summary>
            Clear collection.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.Rename(System.String,System.String)">
            <summary>
            Renames the expression editor.
            </summary>
            <param name="oldName">related column name (old value).</param>
            <param name="newName">new value of the column name.</param>
            <returns>true if success, false if failed.</returns>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.Evaluate(System.String)">
            <summary>
            Evaluates the expression of the expression editor related to the specified column.
            </summary>
            <remarks>need to set ItemContext before this operation.</remarks>
            <param name="columnName">specified column name.</param>
            <returns>result of the evaluation.</returns>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.ThemeChanged(System.Object)">
            <summary>
            Changes theme of the expression editor controls.
            </summary>
            <param name="theme">new theme.</param>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.OpenForm(System.String,System.Drawing.Point)">
            <summary>
            Opens the empty expression editor form at the specified location.
            </summary>
            <param name="column">Column name.</param>
            <param name="location">Specified location.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.OpenCustomForm(System.String,System.String,System.Drawing.Point)">
            <summary>
            Opens the custom expression editor form at the specified location.
            </summary>
            <param name="column">Column name.</param>
            <param name="expression">Custom expression.</param>
            <param name="location">Specified location.</param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.ExpressionEditors">
            <summary>
            only for tests
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.SetProperty(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            Set property value by name.
            </summary>
            <param name="pi">property info.</param>
            <param name="value">value to set.</param>
            <returns>true if success, false if failed.</returns>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.Dispose(System.Boolean)">
            <summary>
            Releases all unmanaged resources.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.ExpressionsProxy.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.Attach">
            <summary>
            Check if the Assembly is referenced, initialize the AssemblyLoader and list of expressions
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.Evaluate(C1.Win.TreeView.C1TreeNode)">
            <summary>
            Evaluate the all expressions for the specified node.
            </summary>
            <param name="node">Specified node.</param>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.Rename(System.String,System.String)">
            <summary>
            Rename column.
            </summary>
            <param name="oldName">Old column name.</param>
            <param name="newName">New column name.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.Remove(C1.Win.TreeView.C1TreeColumn)">
            <summary>
            Remove column from the expressions.
            </summary>
            <param name="column">Column to remove.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.Clear">
            <summary>
            Clear list and dispose the items data.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.UpdateDataSource">
            <summary>
            Update data source for all expressions.
            </summary>
            <returns>True if need to perform an evaluation.</returns>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.UpdateDataMember">
            <summary>
            Update data member for all expressions.
            </summary>
            <returns>True if need to perform an evaluation.</returns>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.UpdateExpressions">
            <summary>
            Update all expressions and evaluate if needed.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.UpdateExpression(C1.Win.TreeView.C1TreeColumn)">
            <summary>
            Update expressions for the specified column and evaluate it if needed.
            </summary>
            <param name="column">Specified column.</param>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.ThemeChanged(System.Object)">
            <summary>
            Theme changed method.
            </summary>
            <param name="theme">Current theme to apply.</param>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.OpenForm(C1.Win.TreeView.C1TreeColumn)">
            <summary>
            Open the ExpressionEditor dialog form for the specified column.
            </summary>
            <param name="column">Specified column.</param>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.OpenCustomForm(System.String,System.String,System.Int32)">
            <summary>
            Open the custom ExpressionEditor dialog form for the specified column name.
            </summary>
            <param name="columnName">Specified column name.</param>
            <param name="expression">Custom expression.</param>
            <param name="level">Specified node level.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.GetLevelEditors(System.Int32)">
            <summary>
            Gets ExpressionsProxy for the specified node level.
            </summary>
            <param name="nodeLevel">specified node level</param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.Dispose(System.Boolean)">
            <summary>
            Releases all unmanaged resources.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionEditor.TreeViewExpressionsHelper.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.BindingInfo">
            <summary>
            Contains information about a data binding.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.BindingInfo.BindingMode">
            <summary>
            Gets or sets a value indicating type of the bound mode.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.BindingInfo.AutoGenerateColumns">
            <summary>
            Gets or sets a value indicating whether bound fields are automatically created for each field in the data source.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.BindingInfo.DataSource">
            <summary>
            Gets or sets the object used as the data source for the current tree view control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.BindingInfo.DataMember">
            <summary>
            Gets or sets a name of a specific record set within the DataSource.
            </summary>
            <remarks>
            You can set the data member for all levels using square brackets: FirstLevel\\[AllOtherLevels]
            </remarks>   
        </member>
        <member name="P:C1.Win.TreeView.BindingInfo.CheckedFieldName">
            <summary>
            Gets or sets the list of fields to be used for binding with checkboxes depending on the level of the node.
            </summary>
            <remarks>
            Last field name sets the field to be used on all of the following levels.
            </remarks>
            <example>[First]\\[Second]\\[etc]</example>
        </member>
        <member name="P:C1.Win.TreeView.BindingInfo.DisabledFieldName">
            <summary>
            Gets or sets the list of fields to be used for binding with enabled properties depending on the level of the node.
            </summary>
            <remarks>
            Last field name sets the field to be used on all of the following levels.
            </remarks>
            <example>[First]\\[Second]\\[etc]</example>
        </member>
        <member name="P:C1.Win.TreeView.BindingInfo.ParentKeyField">
            <summary>
            Gets or sets a value representing the data source field identifying the parent record in this data source.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.BindingInfo.KeyField">
            <summary>
            Gets or sets a value specifying the key field of the data source bound to the tree view control.
            </summary>
            <remarks>
            You can set the key field for all levels using square brackets: FirstLevel\\[AllOtherLevels]
            </remarks>        
        </member>
        <member name="E:C1.Win.TreeView.BindingInfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.BindingInfo.OnPropertyChanged(System.String)">
            <summary>
            Fires the PropertyChanged event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:C1.Win.TreeView.CheckBoxInfo">
            <summary>
            Contains a logic of C1TreeColumn header CheckBox.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CheckBoxInfo.Visible">
            <summary>
            Gets or sets a value indicating whether the CheckBox are displayed in header of first visible C1TreeColumn.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CheckBoxInfo.Checked">
            <summary>
            Gets or sets a value indicating whether the tree node checkbox is in the checked state.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CheckBoxInfo.CheckState">
            <summary>
            Gets or sets the state of the tree node checkbox.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.CheckBoxInfo.HeaderCheckStateChanging">
            <summary>
            Occurs before the tree column header checkbox is checked. Allows to cancel the change.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.CheckBoxInfo.HeaderCheckStateChanged">
            <summary>
            Occurs after the tree column header checkbox is checked.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.CheckBoxInfo.OnHeaderCheckStateChanging(System.ComponentModel.CancelEventArgs)">
            <summary>
            Fires the HeaderCheckStateChanging event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.CheckBoxInfo.OnHeaderCheckStateChanged(System.EventArgs)">
            <summary>
            Fires the HeaderCheckStateChanged event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.CheckBoxInfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.CheckBoxInfo.OnPropertyChanged(System.String)">
            <summary>
            Fires the PropertyChanged event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:C1.Win.TreeView.CheckListBindingInfo">
            <summary>
            Contains information about a data binding.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CheckListBindingInfo.DataSource">
            <summary>
            Gets or sets the object used as the data source for the current <see cref="T:C1.Win.TreeView.C1CheckList"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CheckListBindingInfo.DataMember">
            <summary>
            Gets or sets a name of a specific record set within the DataSource.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CheckListBindingInfo.CheckedMemberPath">
            <summary>
            Gets or sets the name of the property used to control the check boxes placed next to each item.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CheckListBindingInfo.DisabledMemberPath">
            <summary>
            Gets or sets the name of the property used to control the enable or disable status to each item.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CheckListBindingInfo.DisplayMemberPath">
            <summary>
            Gets or sets a path to a value on the source object to serve as the visual representation of the object.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CheckListBindingInfo.ValueMemberPath">
            <summary>
            Gets or sets the property path that is used to get the value of item in the C1CheckList.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.CheckListBindingInfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.CheckListBindingInfo.OnPropertyChanged(System.String)">
            <summary>
            Fires the PropertyChanged event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:C1.Win.TreeView.C1CheckListEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.TreeView.C1CheckList.ItemValueChanged"/> event of a <see cref="T:C1.Win.TreeView.C1CheckList"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListEventArgs.#ctor(C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1CheckListEventArgs"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListEventArgs.Item">
            <summary>
            Gets the item of <see cref="T:C1.Win.TreeView.C1CheckList"/> control.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1CheckListItemStylesEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.TreeView.C1CheckList.ApplyItemStyles"/> event of a <see cref="T:C1.Win.TreeView.C1CheckList"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemStylesEventArgs.#ctor(C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1CheckListItemStylesEventArgs"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListItemStylesEventArgs.ItemStyles">
            <summary>
            Gets the item styles of C1CheckList control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListItemStylesEventArgs.Item">
            <summary>
            Gets the item of C1CheckList control.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.ExpressionInfo">
            <summary>
            Contains information about an expressions.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ExpressionInfo.#ctor(System.String[])">
            <summary>
            Unlimited expressions.
            </summary>
            <param name="expressions"></param>
        </member>
        <member name="P:C1.Win.TreeView.ExpressionInfo.AllowDelete">
            <summary>
            Gets or sets a value indicating the ability to remove node level expression.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.ExpressionInfo.AllowAddNew">
            <summary>
            Gets or sets a value indicating the ability to add new node level expression.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.ExpressionInfo.AllowEdit">
            <summary>
            Gets or sets whether the expressions of this column can be edited by clicking 
            on the ExpressionEditor icon in the column header.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.ExpressionInfo.Expressions">
            <summary>
            Gets or sets the expressions for column.
            </summary>        
            <exception cref="T:C1.Win.TreeView.ExpressionException"></exception>
        </member>
        <member name="P:C1.Win.TreeView.ExpressionInfo.ExpandLastExpression">
            <summary>
            Gets or sets the value indicating whether the last expression expand to all subsequent 
            levels of the TreeView even if the expression is not defined for them.
            </summary>        
            <exception cref="T:C1.Win.TreeView.ExpressionException"></exception>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewChangedEventArgs.NodeChilds">
            <summary>
            ClearedNodes
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewChangedEventArgs.ParentNode">
            <summary>
            RemovedNode
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewChangedEventArgs.NewIndex">
            <summary>
            InsertedNode, MovedNode
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewChangedEventArgs.OldIndex">
            <summary>
            RemovedNode, MovedNode, RemovedColumn
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.TreeView.C1TreeView.CheckStateChanged"/>, <see cref="E:C1.Win.TreeView.C1TreeView.Collapsed"/>, <see cref="E:C1.Win.TreeView.C1TreeView.Expanded"/>, and <see cref="E:C1.Win.TreeView.C1TreeView.SelectionChanged"/> events of a <see cref="T:C1.Win.TreeView.C1TreeView"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewEventArgs.Node">
            <summary>
            Gets the tree node that has been checked, expanded, collapsed, or selected.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewCancelEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.TreeView.C1TreeView.CheckStateChanging"/>, <see cref="E:C1.Win.TreeView.C1TreeView.Collapsing"/>, <see cref="E:C1.Win.TreeView.C1TreeView.Expanding"/>, and <see cref="E:C1.Win.TreeView.C1TreeView.SelectionChanging"/> events of a <see cref="T:C1.Win.TreeView.C1TreeView"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewCancelEventArgs.Node">
            <summary>
            Gets the tree node that has been checked, expanded, collapsed, or selected.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewNodeStylesEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.TreeView.C1TreeView.ApplyNodeStyles"/> event of a <see cref="T:C1.Win.TreeView.C1TreeView"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewNodeStylesEventArgs.NodeStyles">
            <summary>
            Gets the tree node styles of TreeView control.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewNodeCellEventArgs">
            <summary>
            Provides data for events of a <see cref="T:C1.Win.TreeView.C1TreeView"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewNodeCellEventArgs.ColumnIndex">
            <summary>
            Gets the tree column index of TreeView control.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewColumnMouseEventArgs">
            <summary>
            Provides data for events of a <see cref="T:C1.Win.TreeView.C1TreeView"/> control.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeViewColumnMouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1TreeViewColumnMouseEventArgs"/> class.
            </summary>
            <param name="button">One of the <see cref="T:System.Windows.Forms.MouseButtons"/> values that indicate which mouse button was pressed.</param>
            <param name="clicks">The number of times a mouse button was pressed.</param>
            <param name="x">The x-coordinate of a mouse click, in pixels.</param>
            <param name="y">The y-coordinate of a mouse click, in pixels.</param>
            <param name="delta">A signed count of the number of detents the wheel has rotated.</param>
            <param name="columnIndex">The tree column index of TreeView control.</param>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewColumnMouseEventArgs.ColumnIndex">
            <summary>
            Gets the tree column index of TreeView control.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewNodeCellCancelEventArgs">
            <summary>
            Provides data for events of a <see cref="T:C1.Win.TreeView.C1TreeView"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewNodeCellCancelEventArgs.ColumnIndex">
            <summary>
            Gets the tree column index of TreeView control.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewToolTipTextEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.TreeView.C1TreeView.ApplyNodeCellToolTipText"/> event of a <see cref="T:C1.Win.TreeView.C1TreeView"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewToolTipTextEventArgs.ColumnIndex">
            <summary>
            Gets the tree column index of TreeView control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewToolTipTextEventArgs.ToolTipText">
            <summary>
            Gets or sets the text that appears when the mouse pointer hovers over a <see cref="T:C1.Win.TreeView.C1TreeNode"/>.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewNodeCellStylesEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.TreeView.C1TreeView.ApplyNodeCellStyles"/> event of a <see cref="T:C1.Win.TreeView.C1TreeView"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewNodeCellStylesEventArgs.NodeCellStyles">
            <summary>
            Gets the cell of tree node styles of TreeView control.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewItemDragEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.TreeView.C1TreeView.ItemDrag"/> event of a <see cref="T:C1.Win.TreeView.C1TreeView"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewItemDragEventArgs.Nodes">
            <summary>
            Gets the tree nodes that has been dragged.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewItemDragEventArgs.DraggedData">
            <summary>
            Gets the data that has been dragged.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewCheckBoxEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.TreeView.C1TreeView.NodeCheckBoxClick"/> event of a <see cref="T:C1.Win.TreeView.C1TreeView"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeViewCheckBoxEventArgs.Node">
            <summary>
            Gets the tree node whose checkbox was clicked.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreePanel.Rows">
            <summary>
            Returns the <see cref="T:C1.Framework.GridRowCollection"/>.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreePanel.Columns">
            <summary>
            Returns the <see cref="T:C1.Framework.GridColumnCollection"/>.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.CustomContentPresenter">
            <summary>
            The <see cref="T:C1.Win.TreeView.CustomContentPresenter"/> is a layout panel with the only child element which always fills all available space.   
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.CustomContentPresenter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Win.TreeView.CustomContentPresenter"/>.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CustomContentPresenter.Child">
            <summary>
            Root <see cref="T:C1.Framework.Element"/> of <see cref="T:C1.Win.TreeView.CustomContentPresenter"/>.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CustomContentPresenter.Owner">
            <summary>
            Gets the <see cref="T:C1.Win.TreeView.C1TreeView"/> of current <see cref="T:C1.Win.TreeView.C1TreeNode"/>.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CustomContentPresenter.ToolTipText">
            <summary>
            Gets or sets the text that appears as a ToolTip for this <see cref="T:C1.Win.TreeView.CustomContentPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.CustomContentPresenter.SetStyle(C1.Win.TreeView.TreeNodeCellStyles)">
            <summary>
            Sets the styles of this <see cref="T:C1.Win.TreeView.CustomContentPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.CustomContentPresenter.SetValue(System.Object)">
            <summary>
            Sets the value represented by this <see cref="T:C1.Win.TreeView.ICellContentPresenter"/>.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CustomContentPresenter.Node">
            <summary>
            Gets the <see cref="T:C1.Win.TreeView.C1TreeNode"/> that represents the <see cref="T:C1.Win.TreeView.CustomContentPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.CustomContentPresenter.SetFormat(System.String)">
            <summary>
            Sets the format string used to display the value when the node cell is not in edit mode.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CustomContentPresenter.IsSelected">
            <summary>
            Gets a value indicating whether this <see cref="T:C1.Win.TreeView.CustomContentPresenter"/> is in the selected state.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CustomContentPresenter.IsHotSelected">
            <summary>
            Gets a value indicating whether this <see cref="T:C1.Win.TreeView.CustomContentPresenter"/> is in the selected anh hot state.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CustomContentPresenter.IsUnfocusedSelected">
            <summary>
            Gets a value indicating whether this <see cref="T:C1.Win.TreeView.CustomContentPresenter"/> is in the selected state and the <see cref="T:C1.Win.TreeView.C1TreeView"/> hasn't focus.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.CustomContentPresenter.IsEnabled">
            <summary>
            Gets whether this element and all its ancestors are enabled.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.CustomContentPresenter.Layout(System.Drawing.Graphics)">
            <summary>
            Layout this element based on its style and contents.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.CustomContentPresenter.LayoutChildren(System.Drawing.Graphics)">
            <summary>
             Update children layout and position.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeColumnCollection.#ctor(C1.Win.TreeView.TreePanel)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.TreeColumnCollection"/> class.
            </summary>
            <param name="tree">The owning <see cref="T:C1.Win.TreeView.TreePanel"/> element.</param>
        </member>
        <member name="P:C1.Win.TreeView.TreeColumnCollection.Tree">
            <summary>
            Return the reference to the owning grid.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeColumnCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.GridColumn"/> at a specified index in the list.
            </summary>
            <param name="index">Index of the grid column to get or set.</param>.
            <returns>The <see cref="T:C1.Framework.GridColumn"/> at the specified index.</returns>
        </member>
        <member name="M:C1.Win.TreeView.TreeColumnCollection.Add(C1.Framework.GridColumn)">
            <summary>
            Adds an <see cref="T:C1.Framework.GridColumn"/> to the list.
            </summary>
            <param name="value"><see cref="T:C1.Framework.GridColumn"/> to add to the list.</param>
            <returns>The index of the new grid column in the list.</returns>
        </member>
        <member name="M:C1.Win.TreeView.TreeColumnCollection.Add">
            <summary>
            Adds an <see cref="T:C1.Framework.GridColumn"/> to the list.
            </summary>
            <returns>The index of the new grid column in the list.</returns>
        </member>
        <member name="F:C1.Win.TreeView.TreeRow._index">
            <summary>
            index of this row in collection
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeRow.Tree">
            <summary>
            Returns the reference to the owning <see cref="T:C1.Win.TreeView.TreePanel"/> element.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeRow.Index">
            <summary>
            Returns the <see cref="T:System.Int32"/> value specifying the index of this row in the owning grid.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeRowCollection.Tree">
            <summary>
            Returns the reference to the owning <see cref="T:C1.Win.TreeView.TreePanel"/> element.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeRowCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Win.TreeView.TreeRow"/> at a specified index in the list.
            </summary>
            <param name="index">Index of the row to get or set.</param>.
            <returns>The <see cref="T:C1.Win.TreeView.TreeRow"/> at the specified index.</returns>
        </member>
        <member name="M:C1.Win.TreeView.TreeRowCollection.Add(C1.Win.TreeView.TreeRow)">
            <summary>
            Adds a <see cref="T:C1.Win.TreeView.TreeRow"/> to the list.
            </summary>
            <param name="value">The <see cref="T:C1.Win.TreeView.TreeRow"/> to add to the list.</param>
            <returns>The index of the new row in the list.</returns>
        </member>
        <member name="T:C1.Win.TreeView.AutoSearchService">
            <summary>
            The service of search a node by the value. 
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.AutoSearchService.#ctor(C1.Win.TreeView.TreeModel)">
            <summary>
            The service of search a node by the value. 
            </summary>
            <param name="tree"></param>
        </member>
        <member name="P:C1.Win.TreeView.AutoSearchService.DFS">
            <summary>
            Search Type: true - Depth-first search, false - breadth-first search.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.AutoSearchService.Search(System.String,System.Int32)">
            <summary>
            Search for the node containing the specified string.
            </summary>
            <param name="value">The string to search for.</param>
            <param name="columnIndex">Node column index.</param>
            <returns>True if node is found, False otherwise.</returns>
        </member>
        <member name="T:C1.Win.TreeView.BaseSearchService">
            <summary>
            The base class for search services on the <see cref="T:C1.Win.TreeView.C1TreeView"/> control. 
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.BaseSearchService.#ctor(C1.Win.TreeView.TreeModel)">
            <summary>
            The service of search a node by the value. 
            </summary>
            <param name="tree"></param>
        </member>
        <member name="P:C1.Win.TreeView.BaseSearchService.ComparisonType">
            <summary>
            String comparison type.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.Util.ImageListConverter.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.Util.ImageListConverter" /> class.
            </summary>
            <param name="type">A <see cref="T:System.Type" /> that represents the type to associate with this component converter.</param>
        </member>
        <member name="M:C1.Win.TreeView.Util.ImageListConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Gets a value indicating whether this object supports properties using the specified context.</summary>
            <returns>false because we don't want to expose the properties in the Property Editor</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
        </member>
        <member name="M:C1.Win.TreeView.Util.ImageListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts the given value object to the reference type using the specified context and arguments.</summary>
            <returns>The converted object.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture used to represent the font. </param>
            <param name="value">The <see cref="T:System.Object" /> to convert. </param>
            <param name="destinationType">The type to convert the object to. </param>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="destinationType" /> is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:C1.Win.TreeView.Styles.CheckListItemStyles">
            <summary>
            Represents the styles of <see cref="T:C1.Win.TreeView.C1CheckList"/> item.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.CheckListItemStyles.Default">
            <summary>
            Gets the default styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.CheckListItemStyles.Selected">
            <summary>
            Gets the selected styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.CheckListItemStyles.Hot">
            <summary>
            Gets the hot styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.CheckListItemStyles.HotSelected">
            <summary>
            Gets the hot selected styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.CheckListItemStyles.UnfocusedSelected">
            <summary>
            Gets the unfocused selected styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.CheckListItemStyles.Disabled">
            <summary>
            Gets the disabled styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.CheckListItemStyles.Font">
            <summary>
            Gets or sets the font.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.CheckListItemStyles.HorizontalAlign">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.CheckListItemStyles.VerticalAlign">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.CheckListItemStyles.WordWrap">
            <summary>
            Gets or sets whether text should be allowed to wrap.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.Styles.CheckListStyles">
            <summary>
            Represents the styles of <see cref="T:C1.Win.TreeView.C1CheckList"/>.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.CheckListStyles.Header">
            <summary>
            Gets the styles of header.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.CheckListStyles.CheckBoxColor">
            <summary>
            Gets or sets the checkbox color.        
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.Styles.HeaderStyle">
            <summary>
            Defines style of <see cref="T:C1.Win.TreeView.C1CheckList"/> header.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.HeaderStyle.Font">
            <summary>
            Gets or sets the font.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.HeaderStyle.HorizontalAlign">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.HeaderStyle.VerticalAlign">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.HeaderStyle.WordWrap">
            <summary>
            Gets or sets whether text should be allowed to wrap.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.Styles.ItemStyle">
            <summary>
            Defines style of <see cref="T:C1.Win.TreeView.C1CheckList"/> item state.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.ItemStyle.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Styles.ItemStyle.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.NodeCellStyle">
            <summary>
            Defines style of cell of <see cref="T:C1.Win.TreeView.C1TreeNode"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.NodeCellStyle.#ctor">
            <summary>
            Initializes new instance of cell's style of <see cref="T:C1.Win.TreeView.C1TreeNode"/>.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.NodeCellStyle.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.NodeCellStyle.OnPropertyChanged(System.String)">
            <summary>
            Fires the PropertyChanged event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:C1.Win.TreeView.NodeCellStyle.BBProvider">
            <summary>
            Gets or sets BackgroundBrushProvider used to paint element backgrounds.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.NodeCellStyle.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.NodeCellStyle.ShouldSerializeBackColor">
            <summary>
            Returns true if the BackColor has changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.NodeCellStyle.ResetBackColor">
            <summary>
            Resets the BackColor property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.NodeCellStyle.DefaultBackColor">
            <summary>
            Gets the default background color.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.NodeCellStyle.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.NodeCellStyle.ShouldSerializeForeColor">
            <summary>
            Returns true if the ForeColor has changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.NodeCellStyle.ResetForeColor">
            <summary>
            Resets the ForeColor property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.NodeCellStyle.DefaultForeColor">
            <summary>
            Gets the default foreground color.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.NodeCellStyle.ShouldSerialize">
            <summary>
            Returns true if this style has changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.NodeCellStyle.Reset">
            <summary>
            Resets this style to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.NodeCellStyle.Merge(C1.Win.TreeView.NodeCellStyle)">
            <summary>
            Merge two styles.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.NodeCellStyle.SetDefaultStyle(C1.Win.TreeView.NodeCellStyle,System.Boolean)">
            <summary>
            Set default properties of style.
            </summary>
            <param name="style">new default style.</param>
            <param name="reset">true - If the property has a old default value, then reset it to a new default value.</param>
        </member>
        <member name="M:C1.Win.TreeView.NodeCellStyle.ToString">
            <summary>Returns a string that represents the current NodeCellStyle.</summary>
            <returns>A string that represents the current NodeCellStyle.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:C1.Win.TreeView.NodeCellStyle.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:C1.Win.TreeView.NodeCellStyle" /> is equal to the current <see cref="T:C1.Win.TreeView.NodeCellStyle" />.</summary>
            <returns>true if the specified <see cref="T:C1.Win.TreeView.NodeCellStyle" /> is equal to the current <see cref="T:C1.Win.TreeView.NodeCellStyle" />; otherwise, false.</returns>
            <param name="obj">The object to compare with the current NodeCellStyle. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:C1.Win.TreeView.NodeCellStyle.GetHashCode">
            <summary>Serves as a hash function for a particular type. </summary>
            <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:C1.Win.TreeView.C1CheckList">
            <summary>
            A list-based control with optional check boxes for each item, different selection modes and ability to select/unselect all items.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.ThemeChanged(System.Object)">
            <summary>
            Use internal only for theming support.
            </summary>
            <param name="newTheme">The new theme to be applied.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1CheckList"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.CheckImageList">
            <summary>
            Gets the image list that is used to indicate the state of the <see cref="T:C1.Win.TreeView.C1CheckList"/> items.
            </summary>
            <remarks>
            When the CheckImageList property is set, each <see cref="T:C1.Win.TreeView.C1CheckListItem"/> that is contained in the <see cref="T:C1.Win.TreeView.C1CheckList"/> displays the first and second images from the CheckImageList to indicate an unchecked or checked state, respectively.
            Additionally the <see cref="T:C1.Win.TreeView.C1CheckList"/> can displays the twelve state of checkbox if the CheckImageList property contains twelve images with keys from CheckBoxState enum.
            </remarks>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.ShouldSerializeCheckImageList">
            <summary>
            Returns true if this <see cref="P:C1.Win.TreeView.C1CheckList.CheckImageList"/> property has changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.ResetCheckImageList">
            <summary>
            Resets the <see cref="P:C1.Win.TreeView.C1CheckList.CheckImageList"/> property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.RightClickSelect">
            <summary>
            Gets or sets a value indicating whether a item can be selected by right click or not.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.BindingInfo">
            <summary>
            Contains information about a data binding.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.BorderColor">
            <summary>
            Gets or sets the color of the control border.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.BorderStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.TreeView.C1CheckList.BorderStyle"/> value determining the type of border around the control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.Items">
            <summary>
            Gets the collection of items in this <see cref="T:C1.Win.TreeView.C1CheckList"/>.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.SelectAllCaption">
            <summary>
            Gets or sets the caption for Select All checkbox.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.SelectedIndex">
            <summary>
            Gets or sets the index of the currently selected item in the list.
            A zero-based index of the currently selected item. A value of negative one (-1) is returned if no item is selected.
            When SelectionMode is Single then only one item remains selected.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.SelectedItem">
            <summary>
            Gets or sets the item that is currently selected in the list.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.SelectedItems">
            <summary>
            Gets the collection of selected items in this <see cref="T:C1.Win.TreeView.C1CheckList"/>.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.SelectedValues">
            <summary>
            Gets the array of selected item values in this <see cref="T:C1.Win.TreeView.C1CheckList"/>.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.SelectionMode">
            <summary>
            Gets or sets a value indicating how the items of the <see cref="T:C1.Win.TreeView.C1CheckList"/> control can be selected.
            SelectionMode is of type enumeration <see cref="T:C1.Win.TreeView.SelectionMode"/>. The default is <see cref="F:C1.Win.TreeView.SelectionMode.Multiple"/>.
            When SelectionMode was changed value to Single then one item remains selected.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.ShowCheckBoxes">
            <summary>
            Gets or sets a value indicating whether check boxes should be visible or not.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.ShowSelectAll">
            <summary>
            Gets or sets a value that indicates whether show select all checkbox or not.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.Styles">
            <summary>
            Gets or sets styles.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.ShouldSerializeStyles">
            <summary>
            Returns true if this Styles property has changed; otherwise, returns false.
            </summary>    
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.ResetStyles">
            <summary>
            Resets the Styles property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.UnselectAllCaption">
            <summary>
            Gets or sets the Caption for Unselect All checkbox.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1CheckList.SelectionChanged">
            <summary>
            Occurs when the selected state of item was changed.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.OnSelectionChanged(System.EventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1CheckList.SelectionChanged"/> event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1CheckList.ApplyItemStyles">
            <summary>
            Occurs before applying styles to a list item.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.OnApplyItemStyles(C1.Win.TreeView.C1CheckListItemStylesEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1CheckList.ApplyItemStyles"/> event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1CheckList.ItemValueChanged">
            <summary>
            Occurs when the item value changed.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.OnItemValueChanged(C1.Win.TreeView.C1CheckListEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1CheckList.ItemValueChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.SelectAll">
            <summary>
            Selects all items of the current <see cref="T:C1.Win.TreeView.C1CheckList"/> control.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.UnselectAll">
            <summary>
            Cancel the selection of all items of the current <see cref="T:C1.Win.TreeView.C1CheckList"/> control.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.SuspendSelection">
            <summary>
            Temporarily suspends calls to the <see cref="E:C1.Win.TreeView.C1CheckList.SelectionChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.ResumeSelection">
            <summary>
            Resumes calls to the <see cref="E:C1.Win.TreeView.C1CheckList.SelectionChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.ScrollToItem(C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Scrolls the <see cref="T:C1.Win.TreeView.C1CheckList"/> to a specific item.
            </summary>
            <param name="item">The item to scroll to.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.Focus(C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Sets focus to a <see cref="T:C1.Win.TreeView.C1CheckList"/> item.
            </summary>
            <param name="item">The item that will be focused.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.RaiseApplyItemStyles(C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Raises the <see cref="E:C1.Win.TreeView.C1CheckList.ApplyItemStyles"/> event.
            </summary>
            <param name="item">The item on which event will be raised.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.C1TreeViewInternal.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckList.C1TreeViewInternal.IsRadioMode">
            <summary>
            Can't unfocused items in the radio selection mode
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.C1TreeViewInternal.UpdateSelection">
            <summary>
            Sets all checked nodes as selected.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.C1TreeViewInternal.SetHeaderEnabled(System.Boolean)">
            <summary>
            Sets enabled state of header checkbox.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckList.C1TreeViewInternal.CreateAccessibilityInstance">
            <summary>
            Returns the custom AccessibleObject for the C1TreeView control.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.HeaderStyle">
            <summary>
            Defines style of header of <see cref="T:C1.Win.TreeView.C1TreeNode"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.HeaderStyle"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.HeaderStyle.Font">
            <summary>
            Gets or sets the font.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.ShouldSerializeFont">
            <summary>
            Returns true if the Font has changed; otherwise, returns false.
            </summary>  
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.ResetFont">
            <summary>
            Resets the BackColor property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.HeaderStyle.HorizontalAlign">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.ShouldSerializeHorizontalAlign">
            <summary>
            Returns true if the HorizontalAlign has changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.ResetHorizontalAlign">
            <summary>
            Resets the HorizontalAlign property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.HeaderStyle.VerticalAlign">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.ShouldSerializeVerticalAlign">
            <summary>
            Returns true if the VerticalAlign has changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.ResetVerticalAlign">
            <summary>
            Resets the VerticalAlign property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.HeaderStyle.WordWrap">
            <summary>
            Gets or sets whether text should be allowed to wrap.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.ShouldSerializeWordWrap">
            <summary>
            Returns true if the WordWrap has changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.ResetWordWrap">
            <summary>
            Resets the WordWrap property to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.ShouldSerialize">
            <summary>
            Returns true if this style has changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.Reset">
            <summary>
            Resets this style to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.Merge(C1.Win.TreeView.NodeCellStyle)">
            <summary>
            Merge two styles.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.SetDefaultStyle(C1.Win.TreeView.NodeCellStyle,System.Boolean)">
            <summary>
            Set default properties of style.
            </summary>
            <param name="style">new default style.</param>
            <param name="reset">true - If the property has a old default value, then reset it to a new default value.</param>
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:C1.Win.TreeView.HeaderStyle" /> is equal to the current <see cref="T:C1.Win.TreeView.HeaderStyle" />.</summary>
            <returns>true if the specified <see cref="T:C1.Win.TreeView.HeaderStyle" /> is equal to the current <see cref="T:C1.Win.TreeView.HeaderStyle" />; otherwise, false.</returns>
            <param name="obj">The object to compare with the current HeaderStyle. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.GetHashCode">
            <summary>Serves as a hash function for a particular type. </summary>
            <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:C1.Win.TreeView.HeaderStyle.ToString">
            <summary>Returns a string that represents the current HeaderStyle.</summary>
            <returns>A string that represents the current HeaderStyle.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:C1.Win.TreeView.TreeNodeCellStyles">
            <summary>
            Defines styles of cell of <see cref="T:C1.Win.TreeView.C1TreeNode"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.TreeNodeCellStyles"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeNodeCellStyles.Default">
            <summary>
            Gets the default styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeNodeCellStyles.Selected">
            <summary>
            Gets the selected styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeNodeCellStyles.Hot">
            <summary>
            Gets the hot styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeNodeCellStyles.HotSelected">
            <summary>
            Gets the hot selected styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeNodeCellStyles.UnfocusedSelected">
            <summary>
            Gets the unfocused selected styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeNodeCellStyles.Editor">
            <summary>
            Gets the editor styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeNodeCellStyles.Disabled">
            <summary>
            Gets the disabled styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeNodeCellStyles.Font">
            <summary>
            Gets or sets the font.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.ShouldSerializeFont">
            <summary>
            Returns true if the Font has changed; otherwise, returns false.
            </summary>     
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.ResetFont">
            <summary>
            Resets the Font property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeNodeCellStyles.HorizontalAlign">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.ShouldSerializeHorizontalAlign">
            <summary>
            Returns true if the HorizontalAlign has changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.ResetHorizontalAlign">
            <summary>
            Resets the HorizontalAlign property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeNodeCellStyles.VerticalAlign">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.ShouldSerializeVerticalAlign">
            <summary>
            Returns true if the VerticalAlign has changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.ResetVerticalAlign">
            <summary>
            Resets the VerticalAlign property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeNodeCellStyles.WordWrap">
            <summary>
            Gets or sets whether text should be allowed to wrap.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.ShouldSerializeWordWrap">
            <summary>
            Returns true if the WordWrap has changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.ResetWordWrap">
            <summary>
            Resets the WordWrap property to its default value.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeNodeCellStyles.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.OnPropertyChanged(System.String)">
            <summary>
            Fires the PropertyChanged event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.Style_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the styles.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.SetDefaultStyles(C1.Win.TreeView.TreeNodeCellStyles,System.Boolean)">
            <summary>
            Set default properties of style.
            </summary>
            <param name="defaultStyles">new default style.</param>
            <param name="reset">true - If the property has a old default value, then reset it to a new default value.</param>
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.ResetStyles">
            <summary>
            Resets this styles to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.ShouldSerialize">
            <summary>
            Returns true if this styles have changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.TreeNodeCellStyles.Merge(C1.Win.TreeView.TreeNodeCellStyles)">
            <summary>
            Merge two styles.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.TreeColumnStyles">
            <summary>
            Represents the styles of column.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeColumnStyles.#ctor">
            <summary>
            Initializes a new instance of the column's styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeColumnStyles.ColumnHeader">
            <summary>
            Gets the styles of column header.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeColumnStyles.SetDefaultStyles(C1.Win.TreeView.TreeNodeCellStyles,System.Boolean)">
            <summary>
            Set default properties of style.
            </summary>
            <param name="defaultStyles">new default style.</param>
            <param name="reset">true - If the property has a old default value, then reset it to a new default value.</param>
        </member>
        <member name="M:C1.Win.TreeView.TreeColumnStyles.ResetStyles">
            <summary>
            Resets this styles to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeColumnStyles.ShouldSerialize">
            <summary>
            Returns true if this styles have changed; otherwise, returns false.
            </summary>    
        </member>
        <member name="M:C1.Win.TreeView.TreeColumnStyles.Merge(C1.Win.TreeView.TreeNodeCellStyles)">
            <summary>
            Merge two styles.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeColumnStyles.ToString">
            <summary>Returns a string that represents the current TreeColumnStyles.</summary>
            <returns>A string that represents the current TreeColumnStyles.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:C1.Win.TreeView.TreeViewStyles">
            <summary>
            Represents the styles of treeview.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeViewStyles.#ctor">
            <summary>
            Initializes a new instance of the treeview's styles.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeViewStyles.CheckBoxColor">
            <summary>
            Gets or sets the checkbox color.        
            </summary>
            <remarks>
            Only works when CheckBoxStyle is Windows10.
            </remarks>
        </member>
        <member name="P:C1.Win.TreeView.TreeViewStyles.CheckBoxStyle">
            <summary>
            Gets or sets style of checkboxes.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeViewStyles.ExpandButtonStyle">
            <summary>
            Gets or sets style of expand buttons.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeViewStyles.BorderStyle">
            <summary>
            Gets or sets style of border.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeViewStyles.Border">
            <summary>
            Gets or sets thickness of border.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeViewStyles.BorderColor">
            <summary>
            Gets or sets color of border.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeViewStyles.LinesWidth">
            <summary>
            Gets or sets the width of lines.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeViewStyles.LinesStyle">
            <summary>
            Gets or sets the style of dashed lines.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeViewStyles.ShowLines">
            <summary>
            Gets or sets a value indicating displays lines or not.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeViewStyles.LinesColor">
            <summary>
            Gets or sets the color of lines.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeViewStyles.DropLineColor">
            <summary>
            Gets or sets the color of drop line.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeViewStyles.SetDefaultStyles(C1.Win.TreeView.TreeNodeCellStyles,System.Boolean)">
            <summary>
            Set default properties of style.
            </summary>
            <param name="defaultStyles">new default style.</param>
            <param name="reset">true - If the property has a old default value, then reset it to a new default value.</param>
        </member>
        <member name="M:C1.Win.TreeView.TreeViewStyles.ResetStyles">
            <summary>
            Resets this styles to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeViewStyles.ShouldSerialize">
            <summary>
            Returns true if this styles have changed; otherwise, returns false.
            </summary>        
        </member>
        <member name="M:C1.Win.TreeView.TreeViewStyles.ToString">
            <summary>Returns a string that represents the current TreeViewStyles.</summary>
            <returns>A string that represents the current TreeViewStyles.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:C1.Win.TreeView.TreeViewXmlReader.LoadObject(System.Xml.XmlNodeList,System.Object)">
            <summary>
             loads the properties of an object saved with SaveObject.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeViewXmlReader.GetValue(System.Xml.XmlNode)">
            <summary>
             get value from node, honor "type" attribute
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.BindingMode">
            <summary>
            Specifies type of the bound mode.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.BindingMode.OneWay">
            <summary>
            The bound data source will not update after tree view hierarchy change.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.BindingMode.TwoWay">
            <summary>
            The bound data source will update after tree view hierarchy change.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewBorderStyle">
            <summary>
            Specifies how to show the borders of cells in <see cref="T:C1.Win.TreeView.C1TreeView"/> control
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewBorderStyle.ColumnsHeaderOnly">
            <summary>
            Borders are shown only for headers of columns.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewBorderStyle.None">
            <summary>
            No borders.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewBorderStyle.ColumnsLineOnly">
            <summary>
            Only left and right borders of columns are shown.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewBorderStyle.Full">
            <summary>
            Borders are shown for all cells.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewEditMode">
            <summary>
            Specifies how a user starts cell editing in the <see cref="T:C1.Win.TreeView.C1TreeView"/> control.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewEditMode.EditOnEnter">
            <summary>
            Editing begins when Enter is pressed while the cell has focus.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewEditMode.EditOnF2">
            <summary>
            Editing begins when F2 is pressed while the cell has focus. This mode places the selection point at the end of the cell contents.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewEditMode.EditOnKeystroke">
            <summary>
            Editing begins when any alphanumeric key is pressed while the cell has focus.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewEditMode.EditOnKeystrokeOrF2">
            <summary>
            Editing begins when any alphanumeric key or F2 is pressed while the cell has focus.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewEditMode.EditProgrammatically">
            <summary>
            Editing begins only when the <see cref="M:C1.Win.TreeView.C1TreeView.BeginEdit"/> method is called.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewEditorType">
            <summary>
            Determines the appearance of cells in <see cref="T:C1.Win.TreeView.C1TreeView"/> before editing.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewEditorType.Text">
            <summary>
            Like a TextBox
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewEditorType.ComboBox">
            <summary>
            Like a ComboBox
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewEditorType.CheckBox">
            <summary>
            Like a CheckBox
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewEditorType.ColorPicker">
            <summary>
            Like a C1ColorPicker
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewEditorType.DatePicker">
            <summary>
            Like a DatePicker
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewEditorType.NumericEdit">
            <summary>
            Like a C1NumericEdit
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeViewSelectionMode">
            <summary>
            Defines the selection behavior for a <see cref="T:C1.Win.TreeView.C1TreeView"/>.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewSelectionMode.Single">
            <summary>
            Only one node can be selected.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewSelectionMode.Multi">
            <summary>
            You can select multiple nodes from all nodes.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewSelectionMode.MultiSibling">
            <summary>
            You can select multiple only sibling nodes with the same parent node.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeViewSelectionMode.None">
            <summary>
            Any node can not be selected.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.CheckBoxStyle">
            <summary>
            Determines the view of a checkbox.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.CheckBoxStyle.System">
            <summary>
            Standard system view.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.CheckBoxStyle.Office2007Black">
            <summary>
            Like a MS Office 2007 Black.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.CheckBoxStyle.Office2007Blue">
            <summary>
            Like a MS Office 2007 Blue.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.CheckBoxStyle.Office2007Silver">
            <summary>
            Like a MS Office 2007 Silver.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.CheckBoxStyle.Office2010Black">
            <summary>
            Like a MS Office 2010 Black.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.CheckBoxStyle.Office2010Blue">
            <summary>
            Like a MS Office 2010 Blue.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.CheckBoxStyle.Office2010Silver">
            <summary>
            Like a MS Office 2010 Silver.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.CheckBoxStyle.Office2013">
            <summary>
            Like a MS Office 2013.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.CheckBoxStyle.Windows10">
            <summary>
            Like a Windows 10.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.ComparisonType">
            <summary>
            String comparison type for C1TreeView.Search method.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.ComparisonType.Equal">
            <summary>
            A specified string and a node value have the same value.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.ComparisonType.StartsWith">
            <summary>
            Beginning of cell value matches the specified string when compared.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.ComparisonType.Contains">
            <summary>
            A specified substring occurs within cell value..
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.DragDropPosition">
            <summary>
            Defines the position for drop of <see cref="T:C1.Win.TreeView.C1TreeNode"/>.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.DragDropPosition.After">
            <summary>
            Node dropped after current node.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.DragDropPosition.Before">
            <summary>
            Node dropped before current node.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.DragDropPosition.Inner">
            <summary>
            Node dropped into current node.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.DragDropPosition.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.ExpandButtonStyle">
            <summary>
            Determines the view of a expand button.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.ExpandButtonStyle.System">
            <summary>
            Standard system view.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.ExpandButtonStyle.VS2015">
            <summary>
            Like a Visual Studio 2015.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.ExpandButtonStyle.Windows10">
            <summary>
            Like a Windows 10.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.SelectionModifier">
            <summary>
            Specifies a modifier key for nodes selection in <see cref = "F:C1.Win.TreeView.C1TreeViewSelectionMode.Multi" /> and <see cref="F:C1.Win.TreeView.C1TreeViewSelectionMode.MultiSibling"/> modes.        
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.SelectionModifier.None">
            <summary>
            Selects or unselects nodes on mouse click.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.SelectionModifier.Ctrl">
            <summary>
            Selects nodes on mouse click and unselects nodes on Ctrl + mouse click.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1CheckListItem">
            <summary>
            Represents an item of a <see cref="T:C1.Win.TreeView.C1CheckList"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1CheckListItem"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItem.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1CheckListItem" /> class.
            </summary>
            <param name="value">The value of the new item.</param>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListItem.Enabled">
            <summary>
            Gets or sets a value indicating whether this item is enabled.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListItem.Selected">
            <summary>
            Gets or sets a value indicating whether the item is in the selected state.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListItem.Value">
            <summary>
            Gets or sets the value of the item.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListItem.DisplayText">
            <summary>
            Gets the display text of the item.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItem.ResetStyles">
            <summary>
            Reset styles of item.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1CheckListItem.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItem.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:C1.Win.TreeView.C1CheckListItem.PropertyChanged"/> event. 
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1CheckListItemCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Win.TreeView.C1CheckListItem"/> objects.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListItemCollection.Count">
            <summary>
            Gets the number of items contained in the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/> instance.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListItemCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/> instance is fixed size.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/> instance is read-only.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListItemCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/> instance is synchronized.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListItemCollection.SyncRoot">
            <summary>
            Gets the synchronize root.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1CheckListItemCollection.CollectionChanged">
            <summary>
            Occurs when the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/> changes, either by adding or removing an item.
            </summary>
            <remarks>
            see <seealso cref="T:System.Collections.Specialized.INotifyCollectionChanged"/>
            </remarks>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.Add(C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Adds an item to the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/>.
            </summary>
            <param name="item">The <see cref="T:C1.Win.TreeView.C1CheckListItem"/> to add to the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/>.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/>.
            </summary>
            <param name="value">The <see cref="T:C1.Win.TreeView.C1CheckListItem"/> to add to the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/>.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.AddRange(System.Collections.Generic.IEnumerable{C1.Win.TreeView.C1CheckListItem})">
            <summary>
            Adds the items of the specified collection to the end of the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection" />.
            </summary>
            <param name="collection">The specified collection of items.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.AddRange(System.Collections.IEnumerable)">
            <summary>
            Adds the items of the specified collection to the end of the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection" />.
            </summary>
            <param name="collection">The specified collection of items.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.Contains(C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Determines whether an item is in the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/>.
            </summary>
            <param name="item">The item to locate in the collection.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.Contains(System.Object)">
            <summary>
            Determines whether an item is in the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/>.
            </summary>
            <param name="value">The item to locate in the collection.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.CopyTo(C1.Win.TreeView.C1CheckListItem[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/> to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The target array.</param>
            <param name="arrayIndex">Start index of the array.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/> to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The target array.</param>
            <param name="index">Start index of the array.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.IndexOf(C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Searches for the specified item and returns the zero-based index.
            </summary>
            <param name="item">The specified item.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.IndexOf(System.Object)">
            <summary>
            Searches for the specified item and returns the zero-based index.
            </summary>
            <param name="value">The specified item.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.Insert(System.Int32,C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Inserts item into the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/> at the specified index.
            </summary>
            <param name="index">Index of the item.</param>
            <param name="item">The specified item.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts item into the <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/> at the specified index.
            </summary>
            <param name="index">Index of the item.</param>
            <param name="value">The specified item.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.Remove(C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Removes the first occurrence of a specified item from the collection.
            </summary>
            <param name="item">The specified item.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specified item from the collection.
            </summary>
            <param name="value">The specified item.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The specified index.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListItemCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raise CollectionChanged event to any listeners.
            Properties/methods modifying this <see cref="T:C1.Win.TreeView.C1CheckListItemCollection"/> will raise
            a collection changed event through this virtual method.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1CheckListSelectedItemCollection">
            <summary>
            Represents a collection of selected <see cref="T:C1.Win.TreeView.C1CheckListItem"/> objects.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListSelectedItemCollection.Count">
            <summary>
            Gets the number of items contained in the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/> instance.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListSelectedItemCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/> instance is fixed size.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListSelectedItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/> instance is read-only.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListSelectedItemCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/> instance is synchronized.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListSelectedItemCollection.SyncRoot">
            <summary>
            Gets the synchronize root.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1CheckListSelectedItemCollection.CollectionChanged">
            <summary>
            Occurs when the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/> changes, either by adding or removing an item.
            </summary>
            <remarks>
            see <seealso cref="T:System.Collections.Specialized.INotifyCollectionChanged"/>
            </remarks>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListSelectedItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1CheckListSelectedItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.Add(C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Adds an item to the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/>.
            </summary>
            <param name="item">The <see cref="T:C1.Win.TreeView.C1CheckListItem"/> to add to the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/>.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/>.
            </summary>
            <param name="value">The <see cref="T:C1.Win.TreeView.C1CheckListItem"/> to add to the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/>.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.AddRange(System.Collections.Generic.IEnumerable{C1.Win.TreeView.C1CheckListItem})">
            <summary>
            Adds the items of the specified collection to the end of the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection" />.
            </summary>
            <param name="collection">The specified collection of items.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.AddRange(System.Collections.IEnumerable)">
            <summary>
            Adds the items of the specified collection to the end of the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection" />.
            </summary>
            <param name="collection">The specified collection of items.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.Contains(C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Determines whether an item is in the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/>.
            </summary>
            <param name="item">The item to locate in the collection.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.Contains(System.Object)">
            <summary>
            Determines whether an item is in the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/>.
            </summary>
            <param name="value">The item to locate in the collection.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.CopyTo(C1.Win.TreeView.C1CheckListItem[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/> to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The target array.</param>
            <param name="arrayIndex">Start index of the array.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/> to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The target array.</param>
            <param name="index">Start index of the array.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.IndexOf(C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Searches for the specified item and returns the zero-based index.
            </summary>
            <param name="item">The specified item.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.IndexOf(System.Object)">
            <summary>
            Searches for the specified item and returns the zero-based index.
            </summary>
            <param name="value">The specified item.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.Insert(System.Int32,C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Inserts item into the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/> at the specified index.
            </summary>
            <param name="index">Index of the item.</param>
            <param name="item">The specified item.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts item into the <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/> at the specified index.
            </summary>
            <param name="index">Index of the item.</param>
            <param name="value">The specified item.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.Remove(C1.Win.TreeView.C1CheckListItem)">
            <summary>
            Removes the first occurrence of a specified item from the collection.
            </summary>
            <param name="item">The specified item.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specified item from the collection.
            </summary>
            <param name="value">The specified item.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The specified index.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raise CollectionChanged event to any listeners.
            Properties/methods modifying this <see cref="T:C1.Win.TreeView.C1CheckListSelectedItemCollection"/> will raise
            a collection changed event through this virtual method.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1CheckListSelectedItemCollection.OnCollectionReset">
            <summary>
            Helper to raise CollectionChanged event with action == Reset to any listeners
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeColumn">
            <summary>
            Represents a column of a <see cref="T:C1.Win.TreeView.C1TreeView"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1TreeColumn"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1TreeColumn"/> class. Uses for design time.
            </summary>
            <param name="isDefault">Indicates that this is the default column.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1TreeColumn"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1TreeColumn"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1TreeColumn"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.ExpressionInfo">
            <summary>
            Contains information about an expressions.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.DisplayFormat">
            <summary>
            Gets or sets the format string used to display the value when the node cell is not in edit mode.
            </summary>
            <remarks>DisplayFormat uses standard .NET format specifiers.</remarks>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.EditFormat">
            <summary>
            Gets or sets the format string used to display the value when the control is in edit mode.
            </summary>
            <remarks>EditFormat uses standard .NET format specifiers.</remarks>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.CustomContentPresenter">
            <summary>
            Gets or sets a custom element that displays content of cells of this column.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.DataMap">
            <summary>
            Gets or sets an <see cref="T:System.Collections.IDictionary"/> used to associate cell values with display values in the ComboBox editor.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.AutoWidth">
            <summary>
            Gets or sets a value indicating whether the column width should be set automatically by content width.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.Name">
            <summary>
            Gets or sets the name of the column of tree in the C1TreeView control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.HeaderText">
            <summary>
            Gets or sets the text of header of the column of tree in the C1TreeView control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.Visible">
            <summary>
            Gets or sets a value indicating whether the tree node is in the visible state.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.DisplayFieldName">
            <summary>
            Gets or sets the list of fields to be displayed in the column depending on the level of the node.
            </summary>
            <remarks>
            Last field name sets the field to be displayed in the column on all of the following levels.
            </remarks>
            <example>[First]\\[Second]\\[etc]</example>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.Width">
            <summary>
            Gets or sets the width of the TreeColumn.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.Styles">
            <summary>
            Gets or sets the styles of the TreeColumn.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.ResetStyles">
            <summary>
            Resets the Styles property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.EditorType">
            <summary>
            Gets or sets the type of node editor.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.IsTypedEditor">
            <summary>
            Gets or sets a value indicating the need to use a cell type to determine the type of the editor.
            </summary>
            <remarks>
            <see cref="T:System.Boolean"/> - CheckBox;
            <see cref="T:System.Drawing.Color"/> - ColorPicker;
            <see cref="T:System.DateTime"/> - DatePicker;
            </remarks>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumn.Editor">
            <summary>
            Gets or sets the custom editor of node.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.AllowExpressionEditingChanged">
            <summary>
             Occurs when the column AllowExpressionEditingChanged changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.EditFormatChanged">
            <summary>
             Occurs when the column EditFormat changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.DisplayFormatChanged">
            <summary>
             Occurs when the column DisplayFormat changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.CustomContentPresenterChanged">
            <summary>
             Occurs when the column CustomContentPresenter changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.IsTypedEditorChanged">
            <summary>
            Occurs when the column IsTypedEditor changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.ExpressionChanged">
            <summary>
            Occurs when the column ExpressionChanged changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.EditorTypeChanged">
            <summary>
            Occurs when the column EditorType changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.AutoWidthChanged">
            <summary>
            Occurs when the column AutoWidth changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.WidthChanged">
            <summary>
            Occurs when the column width changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.VisibleChanged">
            <summary>
            Occurs when the column visible changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.DisplayFieldNameChanged">
            <summary>
            Occurs when the list of fields to be displayed in the column changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.HeaderTextChanged">
            <summary>
            Occurs when the text of header of the column changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.StylesChanged">
            <summary>
            Occurs when the column styles changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeColumn.DataMapChanged">
            <summary>
            Occurs when the DataMap changed.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnIsTypedEditorChanged(System.EventArgs)">
            <summary>
            Fires the IsTypedEditorChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnEditFormatChanged(System.EventArgs)">
            <summary>
            Fires the EditFormatChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnAllowExpressionEditingChanged(System.EventArgs)">
            <summary>
            Fires the AllowExpressionEditingChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnExpressionChanged(System.EventArgs)">
            <summary>
            Fires the ExpressionChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnDisplayFormatChanged(System.EventArgs)">
            <summary>
            Fires the DisplayFormatChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnCustomContentPresenterChanged(System.EventArgs)">
            <summary>
            Fires the CustomContentPresenterChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnDataMapChanged(System.EventArgs)">
            <summary>
            Fires the OnDataMapChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnEditorTypeChanged(System.EventArgs)">
            <summary>
            Fires the OnEditorTypeChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnAutoWidthChanged(System.EventArgs)">
            <summary>
            Fires the AutoWidthChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnWidthChanged(System.EventArgs)">
            <summary>
            Fires the WidthChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnVisibleChanged(System.EventArgs)">
            <summary>
            Fires the VisibleChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnDisplayFieldNameChanged(System.EventArgs)">
            <summary>
            Fires the DisplayFieldNameChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnHeaderTextChanged(System.EventArgs)">
            <summary>
            Fires the HeaderTextChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.OnStylesChanged(System.EventArgs)">
            <summary>
            Fires the StylesChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumn.GetDisplayFieldByLevel(System.Int32)">
            <summary>
            Gets the field name to be displayed in the column depending on the level of the node.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeColumnCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Win.TreeView.C1TreeColumn"/> objects.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumnCollection.#ctor(C1.Win.TreeView.TreeModel)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1TreeColumnCollection"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumnCollection.Item(System.Int32)">
            <summary>
            Gets or sets the column of tree at the specified index.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumnCollection.Count">
            <summary>
            Gets the number of columns of tree contained in the <see cref="T:C1.Win.TreeView.C1TreeColumnCollection"/> instance.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumnCollection.IndexOf(C1.Win.TreeView.C1TreeColumn)">
            <summary>
            Searches for the specified column and returns the zero-based index of the first occurrence within the entire <see cref="T:C1.Win.TreeView.C1TreeColumnCollection"/>.
            </summary>
            <param name="column">The column to locate in the collection.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumnCollection.Contains(C1.Win.TreeView.C1TreeColumn)">
            <summary>
            Determines whether an element is in the <see cref="T:C1.Win.TreeView.C1TreeColumnCollection"/>.
            </summary>
            <param name="item">The column to locate in the collection.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumnCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:C1.Win.TreeView.C1TreeColumnCollection"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumnCollection.Add(C1.Win.TreeView.C1TreeColumn)">
            <summary>
            Adds the new column of tree to the collection.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumnCollection.Add(System.String)">
            <summary>
            Adds the new column of tree with specified name to the collection.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumnCollection.Add(System.String,System.String)">
            <summary>
            Adds the new column of tree with specified name and display field name to the collection.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumnCollection.Add(System.String,System.String,System.String)">
            <summary>
            Adds the new column of tree to the collection.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumnCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the column of tree at the specified index of the collection.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumnCollection.Remove(C1.Win.TreeView.C1TreeColumn)">
            <summary>
            Removes the first occurrence of a specified column of tree from the collection.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumnCollection.Clear">
            <summary>
            Removes all columns of tree from the collection.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeColumnCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire C1.Win.TreeView.C1TreeColumnCollection to a one-dimensional array, starting at the specified index of the target array.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumnCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeColumnCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the System.Collections.ICollection.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeNodeCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Win.TreeView.C1TreeNode"/> objects.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.#ctor(C1.Win.TreeView.TreeModel,C1.Win.TreeView.C1TreeNode)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1TreeNodeCollection"/> class.
            </summary>
            <param name="model">The <see cref="P:C1.Win.TreeView.C1TreeNodeCollection.TreeModel"/> of the tree nodes collection.</param>
            <param name="parent">The parent <see cref="T:C1.Win.TreeView.C1TreeNode"/> of the new tree nodes collection.</param>
            <remarks>When parent is null then it is root of tree.</remarks>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNodeCollection.Count">
            <summary>
            Gets the number of tree nodes contained in the <see cref="T:C1.Win.TreeView.C1TreeNodeCollection"/> instance.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNodeCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:C1.Win.TreeView.C1TreeNodeCollection"/> is read-only.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNodeCollection.Parent">
            <summary>
            Gets a parent node of this collection.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNodeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the tree node at the specified index.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.Add(C1.Win.TreeView.C1TreeNode)">
            <summary>
            Adds an item to the <see cref="T:C1.Win.TreeView.C1TreeNodeCollection"/>.
            </summary>
            <param name="treeNode">The <see cref="T:C1.Win.TreeView.C1TreeNode"/> to add to the <see cref="T:C1.Win.TreeView.C1TreeNodeCollection"/>.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.Add(System.Object)">
            <summary>
            Adds the new tree node with specified value to the collection.
            </summary>
            <param name="value">The value of new <see cref="T:C1.Win.TreeView.C1TreeNode"/> which to add to the <see cref="T:C1.Win.TreeView.C1TreeNodeCollection"/>.</param>
            <returns>The <see cref="T:C1.Win.TreeView.C1TreeNode"/> that is added to the collection.</returns>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.AddRange(System.Collections.Generic.IEnumerable{C1.Win.TreeView.C1TreeNode})">
            <summary>
            Adds the collection of nodes to the collection.
            </summary>        
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.Clear">
            <summary>
            Removes all tree nodes from the collection.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.IndexOf(C1.Win.TreeView.C1TreeNode)">
            <summary>
            Searches for the specified tree node and returns the zero-based index.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.Contains(C1.Win.TreeView.C1TreeNode)">
            <summary>
            Determines whether an element is in the <see cref="T:C1.Win.TreeView.C1TreeNodeCollection"/>.
            </summary>
            <param name="item">The column to locate in the collection.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:C1.Win.TreeView.C1TreeNodeCollection"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.Remove(C1.Win.TreeView.C1TreeNode)">
            <summary>
            Removes the first occurrence of a specified tree node from the collection.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the tree node at the specified index of the collection.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.Insert(System.Int32,C1.Win.TreeView.C1TreeNode)">
            <summary>
            Inserts treeview node into the <see cref="T:C1.Win.TreeView.C1TreeNodeCollection"/> at the specified index.
            </summary>
            <param name="nodeIndex">Index of the node.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves the node of tree at the specified index to a new location in the collection.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeNodeCollection.CollectionChanged">
            <summary>
            Occurs when the <see cref="T:C1.Win.TreeView.C1TreeNodeCollection"/> changes, either by adding or removing an item.
            </summary>
            <remarks>
            see <seealso cref="T:System.Collections.Specialized.INotifyCollectionChanged"/>
            </remarks>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raise <see cref="E:C1.Win.TreeView.C1TreeNodeCollection.CollectionChanged"/> event to any listeners.
            Properties/methods modifying this <see cref="T:C1.Win.TreeView.C1TreeNodeCollection"/> will raise
            a collection changed event through this virtual method.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNodeCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <summary>
            Helper to raise CollectionChanged event to any listeners
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeView">
            <summary>
            Control which manages the hierarchical data structures and displays them in a tree structure that has items that can expand and collapse.
            </summary>
        </member>
        <member name="F:C1.Win.TreeView.C1TreeView._treeModel">
            <summary>
            Data model that reflects internal tree data.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Win.TreeView.C1TreeView"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.SetDesignMode(System.Boolean)">
            <summary>
            Need remove the default column in EndInit method.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.ToStringPlaceHolder">
            <summary>
            Gets a value of placeholder for display value of ToString method of node value.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.WriteXml(System.String,System.Boolean,System.Boolean)">
            <summary>
            Saves the treeview contents to an Xml document.
            </summary>
            <param name="fileName">Name of the file to save, including the path.</param>
            <param name="saveStyles">Save styles of treeview.</param>
            <param name="saveExpandedState">Save treeview in expanded/collapsed state.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.WriteXml(System.IO.TextWriter,System.Boolean,System.Boolean)">
            <summary>
            Saves the treeview contents to an Xml document.
            </summary>
            <param name="tw">The <see cref="T:System.IO.TextWriter"/> where the document is saved.</param>
            <param name="saveStyles">Save styles of treeview.</param>
            <param name="saveExpandedState">Save treeview in expanded/collapsed state.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.WriteXml(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Saves the treeview contents to an Xml document.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> where the document is saved.</param>
            <param name="saveStyles">Save styles of treeview.</param>
            <param name="saveExpandedState">Save treeview in expanded/collapsed state.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.WriteXml(System.Xml.XmlTextWriter,System.Boolean,System.Boolean)">
            <summary>
            Saves the treeview contents to an Xml document.
            </summary>
            <param name="w">The <see cref="T:System.Xml.XmlTextWriter"/> where the document is saved.</param>
            <param name="saveStyles">Save styles of treeview.</param>
            <param name="saveExpandedState">Save treeview in expanded/collapsed state.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ReadXml(System.String)">
            <summary>
            Loads the treview from an Xml document.
            </summary>
            <param name="fileName">Name of the file to load, including the path.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ReadXml(System.IO.TextReader)">
            <summary>
            Loads the treview from an Xml document.
            </summary>
            <param name="tr"><see cref="T:System.IO.TextReader"/> object to use for loading the treeview.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ReadXml(System.IO.Stream)">
            <summary>
            Loads the treview from an Xml document.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object to use for loading the treeview.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ReadXml(System.Xml.XmlReader)">
            <summary>
            Loads the treview from an Xml document.
            </summary>
            <param name="xr"><see cref="T:System.Xml.XmlReader"/> object to use for loading the treeview.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ReadXml(System.Xml.XmlDocument)">
            <summary>
            Loads the treview from an Xml document.
            </summary>
            <param name="doc"><see cref="T:System.Xml.XmlDocument"/> object to use for loading the treeview.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ReadXml(System.Xml.XmlNode)">
            <summary>
            Loads the treview from an Xml document.
            </summary>
            <param name="node"><see cref="T:System.Xml.XmlNode"/> object to use for loading the treeview.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.BeginUpdate">
            <summary>
            Suspends painting during long update operations.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.EndUpdate">
            <summary>
            Restores painting after long update operations.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.Site">
            <summary>
            Gets or sets the site of the control.
            </summary>        
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.IsRtlScrollingSupported">
            <summary>
            Gets or sets value a value determining behavior of scroll in rtl mode.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.BorderStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.TreeView.C1TreeView.BorderStyle"/> value determining the type of border around the control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.ContextMenuStrip">
            <summary>
            Gets or sets the <see cref="P:C1.Win.TreeView.C1TreeView.ContextMenuStrip"/> associated with this control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel"/> event. 
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnLostFocus(System.EventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus"/> event. 
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /> event.</summary>
            <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event. 
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event. 
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"/> event. 
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.KeyEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is a regular input key or 
            a special key that requires preprocessing.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values.</param>
            <returns>True if the specified key is a regular input key; otherwise, false.</returns>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnRightToLeftChanged(System.EventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> event.</summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.</summary>
            <param name="e">An <see cref="T:System.Windows.Forms.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnCursorChanged(System.EventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Control.CursorChanged" /> event.</summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)"/>.
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)"/>.
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)"/>.
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnDragLeave(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnEnabledChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnSizeChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)"/>.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.BeforeContextMenuShow">
            <summary>
            Occurs before the context menu is shown.
            </summary>
            <remarks>Occurs only for ContextMenuStrip.</remarks>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnScroll(System.Windows.Forms.ScrollBars)">
            <summary>
            Override this method to get notifications when the control scrolls.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.ScrollPositionChanged">
            <summary>
            Occurs when the <see cref="P:C1.Framework.ScrollableControl.ScrollPosition"/> property was changed.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnScrollPositionChanged(System.EventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.ScrollPositionChanged"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.ShowColumnHeaders">
            <summary>
            Gets or sets a value indicating whether column headers are shown in the tree view control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.ExtendLastColumn">
            <summary>
            Gets or sets whether the last column should be extended to fill the control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.ScrollOnMouseClick">
            <summary>
            Gets or sets whether to scroll the node cell when it gets focus by mouse click.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.FocusCell(C1.Win.TreeView.C1TreeNode,System.Int32)">
            <summary>
            Sets focus to a node cell.
            </summary>
            <param name="node">The node that contains the cell.</param>
            <param name="columnIndex">The index of the column that contains the cell.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.GetFocusedColumnIndex">
            <summary>
            Gets a column index of focused cell.
            </summary>
            <returns>Index of column.</returns>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.GetFocusedNode">
            <summary>
            Gets a node that contains the focused cell.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ScrollToNode(C1.Win.TreeView.C1TreeNode,System.Boolean,System.Boolean)">
            <summary>
            Scrolls the <see cref="T:C1.Win.TreeView.C1TreeView"/> to a specific node.
            </summary>
            <param name="node">The node to scroll to.</param>
            <param name="top">Specifies whether the node should be scrolled to the top-most position.</param>
            <param name="expand">All ancestors of the specified node should be expanded.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.GetTopNode">
            <summary>
            Returns the first visible <see cref="T:C1.Win.TreeView.C1TreeNode"/> in the <see cref="T:C1.Win.TreeView.C1TreeView"/>.
            </summary>        
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.GetNodeAtPoint(System.Drawing.Point)">
            <summary>
            Gets the node located at the specified point of client area.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.BeginEdit">
            <summary>
            Begins the edit of treeview cell.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.EndEdit(System.Boolean)">
            <summary>
            Ends the edit of treeview cell.
            </summary>
            <param name="cancelEdit">if set to true then revert all changes.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ShowAboutBox">
            <summary>
            Shows the About Box for an instance of C1TreeView.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.RightClickSelect">
            <summary>
            Gets or sets a value indicating whether a node can be selected by right click or not.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.CanSelectHeader">
            <summary>
            Gets or sets a value indicating whether the column header can be selected or not.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.IsFocusSynchronizedWithSelection">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:C1.Win.TreeView.C1TreeView"/> should change a selected node by up or down keys or not.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.HeaderCheckBox">
            <summary>
            Contains information about the C1TreeColumn header CheckBox.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.SelectionModifier">
            <summary>
            Gets or sets a value indicating whether how to select node for <see cref="F:C1.Win.TreeView.C1TreeViewSelectionMode.Multi"/> and <see cref="F:C1.Win.TreeView.C1TreeViewSelectionMode.MultiSibling"/> modes.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.BindingInfo">
            <summary>
            Contains information about a data binding.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.AutoCheckChildNodes">
            <summary>
            Gets or sets a value indicating whether auto check child nodes when parent node is changed checked state.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.EnableDragDrop">
            <summary>
            Gets or sets a value indicating whether a simple drag and drop in the tree should be enable or not.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.AllowUserToResizeColumns">
            <summary>
            Gets or sets whether the user is allowed to resize columns of treeview control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.AllowEditing">
            <summary>
            Gets or sets whether the user is allowed to edit treeview contents.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.EditMode">
            <summary>
            Gets or sets a value specifying how a user starts cell editing in the <see cref="T:C1.Win.TreeView.C1TreeView"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.CheckBoxes">
            <summary>
            Gets or sets a value indicating whether check boxes should be visible or not.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.ImageList">
            <summary>
            Gets or sets the image list used to provide images to show on the tree nodes.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.ButtonImageList">
            <summary>
            Gets the image list that is used to indicate the state of expand buttons.
            </summary>
            <remarks>
            When the ButtonImageList property is set, each <see cref="T:C1.Win.TreeView.C1TreeNode"/> that is contained in the <see cref="T:C1.Win.TreeView.C1TreeView"/> displays the first and second images from the ButtonImageList to indicate an expaneded or collapsed state, respectively.
            Additionally the <see cref="T:C1.Win.TreeView.C1TreeView"/> can displays the eight state of expand button if the ButtonImageList property contains eight images with keys: CollapsedNormal, CollapsedHot, CollapsedPressed, CollapsedDisabled, ExpandedNormal, ExpandedHot, ExpandedPressed, ExpandedDisabled.
            </remarks>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ShouldSerializeButtonImageList">
            <summary>
            Returns true if this <see cref="P:C1.Win.TreeView.C1TreeView.ButtonImageList"/> property has changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ResetButtonImageList">
            <summary>
            Resets the <see cref="P:C1.Win.TreeView.C1TreeView.ButtonImageList"/> property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.CheckImageList">
            <summary>
            Gets the image list that is used to indicate the state of the <see cref="T:C1.Win.TreeView.C1TreeView"/> and its nodes.
            </summary>
            <remarks>
            When the CheckImageList property is set, each <see cref="T:C1.Win.TreeView.C1TreeNode"/> that is contained in the <see cref="T:C1.Win.TreeView.C1TreeView"/> displays the first and second images from the CheckImageList to indicate an unchecked or checked state, respectively.
            Additionally the <see cref="T:C1.Win.TreeView.C1TreeView"/> can displays the twelve state of checkbox if the CheckImageList property contains twelve images with keys from CheckBoxState enum.
            </remarks>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ShouldSerializeCheckImageList">
            <summary>
            Returns true if this <see cref="P:C1.Win.TreeView.C1TreeView.CheckImageList"/> property has changed; otherwise, returns false.
            </summary> 
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ResetCheckImageList">
            <summary>
            Resets the <see cref="P:C1.Win.TreeView.C1TreeView.CheckImageList"/> property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.Styles">
            <summary>
            Gets or sets the style of TreeView.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ResetStyles">
            <summary>
            Resets the Styles property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.SelectionMode">
            <summary>
            Gets or sets a value indicating selection method of nodes in the tree view control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.Nodes">
            <summary>
            The root nodes in the tree view control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.Columns">
            <summary>
            The columns for display data of nodes in the tree view control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.SelectedNodes">
            <summary>
            Gets selected nodes of the tree view control.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.ColumnHeaderMouseClick">
            <summary>
            Occurs when the user clicks a column header.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.MultipleSelectionChanged">
            <summary>
            Occurs when one or more tree nodes changed the selected state in one action.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.HeaderCheckStateChanging">
            <summary>
            Occurs before the tree column header checkbox is checked. Allows to cancel the change.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.HeaderCheckStateChanged">
            <summary>
            Occurs after the tree column header checkbox is checked.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.CellBeginEdit">
            <summary>
            Occurs when the selected cell enters edit mode.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.CellEndEdit">
            <summary>
            Occurs when the selected cell exits edit mode.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.ApplyNodeCellToolTipText">
            <summary>
            Occurs before displaying tree node tooltip.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.ItemDrag">
            <summary>
            Occurs when the node is dragged.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.ApplyNodeCellStyles">
            <summary>
            Occurs before applying styles to a cell of tree node.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.ApplyNodeStyles">
            <summary>
            Occurs before applying styles to a tree node.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.StylesChanged">
            <summary>
            Occurs when the tree styles changed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.Expanding">
            <summary>
            Occurs before the tree node is expanded. Allows to cancel the change.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.Expanded">
            <summary>
            Occurs after the tree node is expanded.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.Collapsing">
            <summary>
            Occurs before the tree node is collapsed. Allows to cancel the change.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.Collapsed">
            <summary>
            Occurs after the tree node is collapsed.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.CheckStateChanging">
            <summary>
            Occurs before the tree node checkbox is checked. Allows to cancel the change.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.CheckStateChanged">
            <summary>
            Occurs after the tree node changed the checked state.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.NodeEnabledChanged">
            <summary>
            Occurs after the tree node changed the enabled state.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.SelectionChanging">
            <summary>
            Occurs when the tree node is being changed selected state. Allows to cancel the change.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.SelectionChanged">
            <summary>
            Occurs when tree node changed the selected state.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.DataBindingComplete">
            <summary>
            Occurs after a data-binding operation has finished.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.NodeCheckBoxClick">
            <summary>
            Occurs when the user clicks a node checkbox.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.RaiseKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"/> event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.Search(System.String,System.Int32,C1.Win.TreeView.ComparisonType,System.Boolean)">
            <summary>
            Searches and shows the <see cref="T:C1.Win.TreeView.C1TreeNode"/> containing the specified string.
            </summary>
            <param name="value">The string to search for.</param>
            <param name="columnIndex">Node column index.</param>
            <param name="comparisonType">String comparison type.</param>
            <param name="dfs">Search Type: true - Depth-first search, false - breadth-first search.</param>        
            <returns>True if node is found, False otherwise.</returns>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.SearchAll(System.String,System.Int32,C1.Win.TreeView.ComparisonType)">
            <summary>
            Searches and shows all nodes containing the specified string.
            </summary>
            <param name="value">The string to search for.</param>
            <param name="columnIndex">Node column index.</param>
            <param name="comparisonType">String comparison type.</param>
            <returns>True if any nodes are found, False otherwise.</returns>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.RaiseApplyNodeStyles(C1.Win.TreeView.C1TreeNode)">
            <summary>
            Raises the <see cref="E:C1.Win.TreeView.C1TreeView.ApplyNodeStyles"/> event.
            </summary>
            <param name="node">The node on which event will be raised.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.RaiseApplyNodeCellStyles(C1.Win.TreeView.C1TreeNode,System.Int32)">
            <summary>
            Raises the <see cref="E:C1.Win.TreeView.C1TreeView.ApplyNodeCellStyles"/> event.
            </summary>
            <param name="node">The node on which event will be raised.</param>
            <param name="columnIndex">Index of the node column.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ResetNodeStyles(C1.Win.TreeView.C1TreeNode)">
            <summary>
            Resets the node styles.
            </summary>
            <param name="node">The node for which the style is reset.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ResetNodeCellStyles(C1.Win.TreeView.C1TreeNode,System.Int32)">
            <summary>
            Resets the node cell styles.
            </summary>
            <param name="node">The node for which the style is reset.</param>
            <param name="columnIndex">Index of the node column.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.CheckAll">
            <summary>
            Checks all nodes in the tree view control.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.UncheckAll">
            <summary>
            Unchecks all nodes in the tree view control.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ExpandAll">
            <summary>
            Expands all nodes in the tree view control.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.CollapseAll">
            <summary>
            Collapses all the nodes in the tree view control.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.C1TreeView.BoundItemChanged">
            <summary>
            Occurs when a bound item changed.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeView.MoveDownByEnter">
            <summary>
            Gets or sets a value indicating whether the focus can move down when the Enter button is pressed.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnNodeCheckBoxClick(C1.Win.TreeView.C1TreeViewCheckBoxEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.NodeCheckBoxClick"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnBoundItemChanged(C1.Win.TreeView.C1TreeViewEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.BoundItemChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnColumnHeaderMouseClick(C1.Win.TreeView.C1TreeViewColumnMouseEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.ColumnHeaderMouseClick"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnMultipleSelectionChanged(System.EventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.MultipleSelectionChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.SetDefaultStyles(C1.Win.TreeView.TreeViewStyles)">
            <summary>
            Sets default style for <see cref="T:C1.Win.TreeView.C1TreeView"/>.
            </summary>
            <param name="styles">This styles will use as default styles.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnHeaderCheckStateChanging(System.ComponentModel.CancelEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.HeaderCheckStateChanging"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnHeaderCheckStateChanged(System.EventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.HeaderCheckStateChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnNodeEnabledChanged(C1.Win.TreeView.C1TreeViewEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.NodeEnabledChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnCellBeginEdit(C1.Win.TreeView.C1TreeViewNodeCellCancelEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.CellBeginEdit"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnCellEndEdit(C1.Win.TreeView.C1TreeViewNodeCellEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.CellEndEdit"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnApplyNodeCellToolTipText(C1.Win.TreeView.C1TreeViewToolTipTextEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.ApplyNodeCellToolTipText"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnItemDrag(C1.Win.TreeView.C1TreeViewItemDragEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.ItemDrag"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnApplyNodeCellStyles(C1.Win.TreeView.C1TreeViewNodeCellStylesEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.ApplyNodeCellStyles"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnApplyNodeStyles(C1.Win.TreeView.C1TreeViewNodeStylesEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.ApplyNodeStyles"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnStylesChanged(System.EventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.StylesChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnExpanding(C1.Win.TreeView.C1TreeViewCancelEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.Expanding"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnExpanded(C1.Win.TreeView.C1TreeViewEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.Expanded"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnCollapsing(C1.Win.TreeView.C1TreeViewCancelEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.Collapsing"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnCollapsed(C1.Win.TreeView.C1TreeViewEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.Collapsed"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnCheckStateChanging(C1.Win.TreeView.C1TreeViewCancelEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.CheckStateChanging"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnCheckStateChanged(C1.Win.TreeView.C1TreeViewEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.CheckStateChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnSelectionChanging(C1.Win.TreeView.C1TreeViewCancelEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.SelectionChanging"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnSelectionChanged(C1.Win.TreeView.C1TreeViewEventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.SelectionChanged"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.OnDataBindingComplete(System.EventArgs)">
            <summary>
            Fires the <see cref="E:C1.Win.TreeView.C1TreeView.DataBindingComplete"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.CreateAccessibilityInstance">
            <summary>
            Returns the custom <see cref="T:System.Windows.Forms.AccessibleObject"/> for the <see cref="T:C1.Win.TreeView.C1TreeView"/> control.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.GetAccessibilityObjectById(System.Int32)">
            <summary>
            Retrieves the specified <see cref="T:System.Windows.Forms.AccessibleObject"/>.
            </summary>
            <param name="objectId">Node index of the accessibility object to return.</param>
            <returns>The <see cref="T:System.Windows.Forms.AccessibleObject"/> for the specified node.</returns>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeView.ThemeChanged(System.Object)">
            <summary>
            Use internal only for theming support.
            </summary>
            <param name="newTheme">The new theme to be applied.</param>
        </member>
        <member name="T:C1.Win.TreeView.C1TreeNode">
            <summary>
            Represents a node of a <see cref="T:C1.Win.TreeView.C1TreeView"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1TreeNode"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1TreeNode"/> class.
            </summary>
            <param name="value">The value of the new tree node.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.#ctor(System.Object,C1.Win.TreeView.C1TreeNodeCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.TreeView.C1TreeNode"/> class.
            </summary>
            <param name="value">The value of the new tree node.</param>
            <param name="parent">The parent <see cref="T:C1.Win.TreeView.C1TreeNodeCollection"/> of the new tree node.</param>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNode.IsInTreeModel">
            <summary>
            Gets a value indicating whether the tree node is contains a reference to the TreeModel.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNode.Tag">
            <summary>
            Gets or sets the object that contains data about the <see cref="T:C1.Win.TreeView.C1TreeNode"/>.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNode.ParentCollection">
            <summary>
            Gets the parent C1TreeNodeCollection.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNode.Item(System.Int32)">
            <summary>
            Gets or sets the value at the specified index.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNode.Level">
            <summary>
            Gets the zero-based depth of the tree node in the C1TreeView control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNode.Expanded">
            <summary>
            Gets or sets a value indicating whether the tree node is in the expanded state.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNode.Checked">
            <summary>
            Gets or sets a value indicating whether the tree node checkbox is in the checked state.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNode.CheckState">
            <summary>
            Gets or sets the state of the tree node checkbox.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNode.Enabled">
            <summary>
            Gets or sets a value indicating whether this node is enabled.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.ShouldSerializeEnabled">
            <summary>
            Returns true if the Enabled has changed; otherwise, returns false.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.ResetEnabled">
            <summary>
            Resets the Enabled property to its default value.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNode.Selected">
            <summary>
            Gets or sets a value indicating whether the tree node is in the selected state.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNode.Nodes">
            <summary>
            Gets the collection of nodes of tree.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNode.HasChildren">
            <summary>
            Returns true if tree node has child nodes.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.C1TreeNode.Images">
            <summary>
            Gets the collection of images indices which displayed in node.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.IsReadOnly(System.Int32)">
            <summary>
            Gets a value indicating whether the contents of the node cell can be changed.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.SetValue(System.Object)">
            <summary>
            Sets the value of the tree node.
            </summary>
            <remarks>Use only for unbound mode.</remarks>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.SetValue(System.Object,System.Int32)">
            <summary>
            Sets the value of the tree node at the specified column.
            </summary>
            <remarks>Column must have <see cref="P:C1.Win.TreeView.C1TreeColumn.DisplayFieldName"/> value.</remarks>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.GetValue(System.Int32)">
            <summary>
            Gets the value of the tree node at the specified column.
            </summary>
            <remarks>Column must have <see cref="P:C1.Win.TreeView.C1TreeColumn.DisplayFieldName"/> value.</remarks>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.GetValue">
            <summary>
            Gets the value of the tree node.
            </summary>
            <remarks>        
            For bound mode, this method returns a data source entry. For example: a DataRow when the data source is a DataTable, or an instance of a custom object when the data source is a collection.
            </remarks>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.Collapse(System.Boolean)">
            <summary>
            Sets the tree node to the collapsed state.
            </summary>
            <param name="allChildrens">If true then sets all child nodes to the collapsed state.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.Expand(System.Boolean)">
            <summary>
            Sets the tree node to the expanded state.
            </summary>
            <param name="allChildrens">If true then sets all child nodes to the expanded state.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.Uncheck(System.Boolean)">
            <summary>
            Sets the checkbox of tree node to the unchecked state.
            </summary>
            <param name="allChildrens">If true then sets all checkbox of child nodes to the unchecked state.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.Check(System.Boolean)">
            <summary>
            Sets the checkbox of tree node to the checked state.
            </summary>
            <param name="allChildrens">If true then sets all checkbox of child nodes to the checked state.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.ResetCellStyles(System.Int32)">
            <summary>
            Reset styles of node cell.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.ResetStyles">
            <summary>
            Reset styles of node.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.ClearCalcData(C1.Win.TreeView.C1TreeColumn)">
            <summary>
            Clear the result of the evaluation of the expression for the specified column.
            </summary>
            <param name="column">specified column.</param>
        </member>
        <member name="M:C1.Win.TreeView.C1TreeNode.SetHierarchicalCheckState(System.Windows.Forms.CheckState)">
            <summary>
            Sets the checkbox of child nodes to the specified state.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.IC1TreeEditor">
            <summary>
            Interface implemented by editors and used by the treeview to host edit controls 
            on cells.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.IC1TreeEditor.C1EditorValueIsValid">
            <summary>
            Gets a value that determines if the editor's current contents are valid.
            </summary>
            <returns>True if the editor currently has valid content.
            </returns>
        </member>
        <member name="M:C1.Win.TreeView.IC1TreeEditor.C1EditorUpdateBounds(System.Drawing.Rectangle)">
            <summary>
            Called to update the editor's size and position.
            </summary>
            <param name="rc">The bounds of the cell being edited, in client coordinates.</param>
        </member>
        <member name="M:C1.Win.TreeView.IC1TreeEditor.C1EditorKeyDownFinishEdit(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Gets a value that determines whether a given key should finalize editing.
            </summary>
            <param name="e">Key to be tested.</param>
            <returns>True if the key should finish the edits and close the editor.</returns>
        </member>
        <member name="M:C1.Win.TreeView.IC1TreeEditor.C1EditorInitialize(System.Object,System.Collections.IDictionary)">
            <summary>
            Called to initialize the editor content.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.IC1TreeEditor.C1EditorGetValue">
            <summary>
            Gets the current value of the editor.
            </summary>
            <returns>The current value of the editor (any data type).</returns>
        </member>
        <member name="M:C1.Win.TreeView.IC1TreeEditor.C1EditorSetFormat(System.String)">
            <summary>
            Sets the format string used to display the value when the control is in edit mode.
            </summary>
            <param name="format">format string uses standard .NET format specifiers.</param>
        </member>
        <member name="T:C1.Win.TreeView.ICellContentPresenter">
            <summary>
            Interface implemented by elements that display content of the <see cref="T:C1.Win.TreeView.C1TreeNode"/> cell.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ICellContentPresenter.SetFormat(System.String)">
            <summary>
            Sets the format string used to display the value when the node cell is not in edit mode.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ICellContentPresenter.SetValue(System.Object)">
            <summary>
            Sets the value represented by this <see cref="T:C1.Win.TreeView.ICellContentPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.ICellContentPresenter.SetStyle(C1.Win.TreeView.TreeNodeCellStyles)">
            <summary>
            Sets the styles of this <see cref="T:C1.Win.TreeView.ICellContentPresenter"/>.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.ICellContentPresenter.Node">
            <summary>
            The displayed <see cref="T:C1.Win.TreeView.C1TreeNode"/>.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreePresenter.ShowColumnHeaders">
            <summary>
            Gets or sets a value indicating whether column headers are shown in the tree view control.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.Localization.C1DescriptionAttribute">
            <summary>
            C1DescriptionAttribute replaces the DescriptionAttribute
            and uses the StringsManager and DesignStrings classes to
            return the localized Attribute string.   
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.Localization.C1CategoryAttribute">
            <summary>
            C1CategoryAttribute replaces the CategoryAttribute
            and uses the StringsManager and DesignStrings classes to
            return the localized Attribute string.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.Localization.DesignStrings">
            <summary>
            The <see cref="T:C1.Win.TreeView.Localization.DesignStrings"/> class contains static properties used for design-time UI localization.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Localization.DesignStrings.ResourceManager">
            <summary>
            The <see cref="P:C1.Win.TreeView.Localization.DesignStrings.ResourceManager"/> object used for lookup resources.
            </summary>
            <remarks>Set this property to the valid value if 
            you define resources in a Custom Control assembly.</remarks>
        </member>
        <member name="P:C1.Win.TreeView.Localization.DesignStrings.UICulture">
            <summary>
            Returns default <see cref="T:System.Globalization.CultureInfo"/> object used as fallback culture.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.Localization.Strings">
            <summary>
            The <see cref="T:C1.Win.TreeView.Localization.Strings"/> class contains static properties used for run-time UI localization.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.ColumnPresenter.HeaderContentElement">
            <summary>
            Represents the content of column header.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.TreeModel">
            <summary>
            Internal class that reflects internal tree data.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeModel.ImageList">
            <summary>
            Gets or sets the image list used to provide images to show on the tree nodes.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeModel.CheckImageList">
            <summary>
            Gets or sets the image list that is used to indicate the state of the TreeView and its nodes.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeModel.ButtonImageList">
            <summary>
            Gets or sets the image list that is used to indicate the state of expand buttons.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeModel.Nodes">
            <summary>
            The root nodes in the tree view control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeModel.Columns">
            <summary>
            The columns for display data of nodes in the tree view control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeModel.SelectionMode">
            <summary>
            Gets or sets a value indicating selection method of nodes in the tree view control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeModel.SelectedNodes">
            <summary>
            Gets selected nodes of the tree view control.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.TreeModel.Styles">
            <summary>
            Gets or sets the styles of TreeView.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.ResetStyles">
            <summary>
            Resets the Styles property to its default value.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.ColumnHeaderMouseClick">
            <summary>
            Occurs when the user clicks a column header.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnColumnHeaderMouseClick(C1.Win.TreeView.C1TreeViewColumnMouseEventArgs)">
            <summary>
            Fires the ColumnHeaderMouseClick event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.MultipleSelectionChanged">
            <summary>
            Occurs when one or more tree nodes changed the selected state.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnMultipleSelectionChanged(System.EventArgs)">
            <summary>
            Fires the MultipleSelectionChanged event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.CanSelectHeaderChanged">
            <summary>
            Occurs when the CanSelectHeader property changed.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnCanSelectHeaderChanged(System.EventArgs)">
            <summary>
            Fires the SelectableHeaderChanged event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.NodeEnabledChanged">
            <summary>
            Occurs after the tree node changed the enabled state.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnNodeEnabledChanged(C1.Win.TreeView.C1TreeViewEventArgs)">
            <summary>
            Fires the NodeEnabledChanged event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.CellBeginEdit">
            <summary>
            Occurs when edit mode starts for the selected cell.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnCellBeginEdit(C1.Win.TreeView.C1TreeViewNodeCellCancelEventArgs)">
            <summary>
            Fires the CellBeginEdit event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.CellEndEdit">
            <summary>
            Occurs when edit mode stops for the currently selected cell.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnCellEndEdit(C1.Win.TreeView.C1TreeViewNodeCellEventArgs)">
            <summary>
            Fires the CellEndEdit event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.ApplyNodeCellToolTipText">
            <summary>
            Occurs when the user can set text of tooltip for a node.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnApplyNodeCellToolTipText(C1.Win.TreeView.C1TreeViewToolTipTextEventArgs)">
            <summary>
            Fires the ApplyNodeCellToolTipText event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.ItemDrag">
            <summary>
            Occurs when the node is dragged.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnItemDrag(C1.Win.TreeView.C1TreeViewItemDragEventArgs)">
            <summary>
            Fires the ItemDrag event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.ApplyNodeCellStyles">
            <summary>
            Occurs when the user can apply styles to a cell of node.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnApplyNodeCellStyles(C1.Win.TreeView.C1TreeViewNodeCellStylesEventArgs)">
            <summary>
            Fires the ApplyNodeCellStyles event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.ApplyNodeStyles">
            <summary>
            Occurs when the user can apply styles to a node.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnApplyNodeStyles(C1.Win.TreeView.C1TreeViewNodeStylesEventArgs)">
            <summary>
            Fires the ApplyNodeStyles event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.Expanding">
            <summary>
            Occurs before the tree node is expanded. Allows to cancel the change.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnExpanding(C1.Win.TreeView.C1TreeViewCancelEventArgs)">
            <summary>
            Fires the Expanding event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.Expanded">
            <summary>
            Occurs after the tree node is expanded.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnExpanded(C1.Win.TreeView.C1TreeViewEventArgs)">
            <summary>
            Fires the Expanded event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.Collapsing">
            <summary>
            Occurs before the tree node is collapsed. Allows to cancel the change.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnCollapsing(C1.Win.TreeView.C1TreeViewCancelEventArgs)">
            <summary>
            Fires the Collapsing event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.Collapsed">
            <summary>
            Occurs after the tree node is collapsed.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnCollapsed(C1.Win.TreeView.C1TreeViewEventArgs)">
            <summary>
            Fires the Collapsed event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.CheckStateChanging">
            <summary>
            Occurs before the tree node checkbox is checked. Allows to cancel the change.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnCheckStateChanging(C1.Win.TreeView.C1TreeViewCancelEventArgs)">
            <summary>
            Fires the CheckStateChanging event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.CheckStateChanged">
            <summary>
            Occurs after the tree node changed the checked state.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnCheckStateChanged(C1.Win.TreeView.C1TreeViewEventArgs)">
            <summary>
            Fires the CheckStateChanged event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.SelectionChanging">
            <summary>
            Occurs when the tree node is being changed selected state. Allows to cancel the change.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnSelectionChanging(C1.Win.TreeView.C1TreeViewCancelEventArgs)">
            <summary>
            Fires the SelectionChanging event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.SelectionChanged">
            <summary>
            Occurs when tree node changed the selected state.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnSelectionChanged(C1.Win.TreeView.C1TreeViewEventArgs)">
            <summary>
            Fires the SelectionChanged event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.DataBindingComplete">
            <summary>
             Occurs after a data-binding operation has finished.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnDataBindingComplete(System.EventArgs)">
            <summary>
            Fires the DataBindingComplete event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.TreeChanged">
            <summary>
             Occurs when tree view model was changed. 
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnTreeChanged(C1.Win.TreeView.C1TreeViewChangedEventArgs)">
            <summary>
            Fires the TreeChanged event.
            </summary>
        </member>
        <member name="E:C1.Win.TreeView.TreeModel.StylesChanged">
            <summary>
            Occurs when the tree styles changed.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.OnStylesChanged(System.EventArgs)">
            <summary>
            Fires the StylesChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.ClearSelectedNodes(C1.Win.TreeView.C1TreeNode)">
            <summary>
            Clears SelectedNodes collection.
            </summary>
            <param name="excludeNode">This node should be selected.</param>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.Search(System.String,System.Int32,C1.Win.TreeView.ComparisonType,System.Boolean)">
            <summary>
            Searches and shows the <see cref="T:C1.Win.TreeView.C1TreeNode"/> containing the specified string.
            </summary>
            <param name="value">The string to search for.</param>
            <param name="columnIndex">Node column index.</param>
            <param name="comparisonType">String comparison type.</param>
            <param name="dfs">Search Type: true - Depth-first search, false - breadth-first search.</param>        
            <returns>True if node is found, False otherwise.</returns>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.SearchAll(System.String,System.Int32,C1.Win.TreeView.ComparisonType)">
            <summary>
            Searches and shows all nodes containing the specified string.
            </summary>
            <param name="value">The string to search for.</param>
            <param name="columnIndex">Node column index.</param>
            <param name="comparisonType">String comparison type.</param>
            <returns>True if any nodes are found, False otherwise.</returns>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.CheckAll">
            <summary>
            Checks all nodes in the tree view control.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.UncheckAll">
            <summary>
            Unchecks all nodes in the tree view control.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.ExpandAll">
            <summary>
            Expands all nodes in the tree view control.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeModel.CollapseAll">
            <summary>
            Collapses all the nodes in the tree view control.
            </summary>
        </member>
        <member name="T:C1.Win.TreeView.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Win.TreeView.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="M:C1.Win.TreeView.TreeViewXmlWriter.Save(System.Xml.XmlTextWriter,System.Boolean,System.Boolean)">
            <summary>
            Save TreeView in XmlTextWriter.
            </summary>
            <param name="w">The <see cref="T:System.Xml.XmlTextWriter"/> where the document is saved.</param>
            <param name="saveStyles">true - include Styles.</param>
            <param name="saveExpandedState">true - include Expand/Collapse state of node.</param>
        </member>
        <member name="F:C1.Util.Licensing.AboutForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.AboutForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Util.Licensing.AboutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.ProviderInfo">
            <summary>
            <para>Provides static <see cref="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)"/> methods that 
            should be called from the constructors of licensed classes.</para>
            <para>Also provides a static <see cref="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)"/> method that can 
            be called to show the about box with product and licensing information.</para>
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)">
            <summary>
            Perform license validation. Call this method from the licensed object's 
            constructor to save a license key at design time, validate it at runtime, 
            and display a nag dialog if a valid license is not found.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object (not currently used).</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</returns>
            <remarks>
            <para>Check the <b>ShouldNag</b> property of the returned <see cref="T:C1.Util.Licensing.LicenseInfo"/> 
            to determine whether the licensed class should nag the user. This value is set
            to true in situations where a valid license was not found but a nag dialog
            could not be displayed. In these cases, the licensed class is supposed to nag
            in some other way (with a watermark for example).</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Boolean)">
            <summary>
            Perform license validation. Call this method from the licensed object's 
            constructor to save a license key at design time, validate it at runtime, 
            and display a nag dialog if a valid license is not found.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object (not currently used).</param>
            <param name="showNagDialog">Whether the nag dialog should be displayed when a valid license is not found.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</returns>
            <remarks>
            <para>This overload was created for use in WPF. It should be called in the control's constructor
            in order to support license persistence correctly. But it should not show the nag dialog until the
            control is fully loaded, or the VS designer may remain blank.</para>
            <para>So the solution is this:</para>
            <code>
            LicenseInfo _licInfo;
            public LicensedControl()
            {
              // check license but don't nag yet
              _licInfo = ProviderInfo.Validate(typeof(LicensedControl), this, false);
              
              // perform licensing after control is fully loaded
              Loaded += LicensedControl_Loaded;
            }
            void LicensedControl_Loaded(object sender, RoutedEventArgs e)
            {
              // nag after loading
              if (_licInfo.ShouldNag)
              {
                ProviderInfo.ShowAboutBox(this);
              }
            }
            </code>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Nag(System.Type,C1.Util.Licensing.LicenseInfo,System.Boolean)">
            <summary>
            Nag user by showing AboutBox with license information.
            Show it only once per day per assembly.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="li"><see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</param>
            <param name="designTime">Whether we're running at design or run time.</param>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Reflection.Assembly,System.String)">
            <summary>
            Version of Validate used by constructors that take runtime keys.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object.</param>
            <param name="callingAsm">Assembly that contains the owner licensed control.</param>
            <param name="runtimeKey">Any valid C1 runtime key.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the runtime key.</returns>
            <remarks>
            <para>This allows a licensed C1 class to create other C1 objects bypassing 
            license verification for the child objects.</para>
            <para>For extra safety, we check that the owner object is defined in an assembly
            the contains a 'C1ProductInfo' attribute.</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ValidateDesigntime(System.Type,System.ComponentModel.LicenseContext)">
            <summary>
            Design time validation. Looks for a license in the registry and saves it in the
            provided <see cref="T:System.ComponentModel.LicenseContext"/>.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="context"><see cref="T:System.ComponentModel.LicenseContext"/> where the runtime key will be stored.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the license.</returns>
            <remarks>
            Call this method from application-type products (that always require a license to be
            installed in the registry). In this case, the <paramref name="context"/> parameter 
            should be set to null.
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ValidateRuntime(System.Type,System.ComponentModel.LicenseContext)">
            <summary>
            Runtime validation.
            Looks for a runtime key stored in the current application's resources.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="context"><see cref="T:System.ComponentModel.LicenseContext"/> where the runtime key will be stored.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the license.</returns>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)">
            <summary>
            Shows the About Box for an instance of a C1 product.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.GetC1Type(System.Object)">
            <summary>
            Get the type whose assembly contains a 'C1ProductInfoAttribute'.
            </summary>
            <param name="instance">Instance of an object whose type is to be checked.</param>
            <returns>The type whose assembly contains a 'C1ProductInfoAttribute'</returns>
        </member>
        <member name="T:C1.Util.Licensing.LicenseInfo">
            <summary>
            Contains information about a license stored in an application.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.LicenseInfo.#ctor(System.Type,C1.Util.Licensing.LicenseStatus,C1.Util.Licensing.ProductLicense)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Util.Licensing.LicenseInfo"/> class.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.LicenseInfo.#ctor(System.Type,C1.Util.Licensing.LicenseStatus)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Util.Licensing.LicenseInfo"/> class.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.LicenseStatus">
            <summary>
            Gets or sets the status of this license (valid, expired, unlicensed).
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.License">
            <summary>
            Gets or sets the <see cref="T:C1.Util.Licensing.ProductLicense"/> associated with this license.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.Type">
            <summary>
            Gets or sets the <see cref="P:C1.Util.Licensing.LicenseInfo.Type"/> associated with this license.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.EvaluationDaysElapsed">
            <summary>
            Gets the number of evaluation days elapsed.
            Returns -1 for valid licenses.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.EvaluationDaysLeft">
            <summary>
            Gets the number of evaluation days still left.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.ShouldNag">
            <summary>
            Gets or sets a value that determines whether the caller should
            nag the user. This is the case when the component/control is 
            not licensed, but is not running in interactive mode. So we can't
            show a dialog and the caller is supposed to nag some other way
            (typically by adding watermarks to the UI or output).
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsValid">
            <summary>
            Gets a value that determines whether the license found is valid.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsExpired">
            <summary>
            Gets a value that determines whether the license found is expired.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsLocalHost">
            <summary>
            Gets a value that determines whether the component is running under
            localhost and therefore should not nag the user with alert dialogs.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.SafeLicenseContext">
            <summary>
            
            Provides a version of GetSavedLicenseKey that doesn't require
            special permissions.
            
            The code was mostly copied from the .NET framework, but then changed 
            in a few places to require fewer permissions (assembly name, file io, 
            etc). 
            
            The main change is the use of a custom deserializer to read Hashtable 
            objects instead of the original BinaryFormatter, which requires
            permissions.
            
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1AboutNameAttribute">
            <summary>
            Attribute used to specify the product name shown on the About Box.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1AllowedCallerAttribute">
            <summary>
            Attribute used to specify assemblies that can use this product without a license.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1ProductInfoAttribute">
            <summary>
            Attribute used to attach licensing/product information to assemblies.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.ProductLicense">
            <summary>
            Represents a license for a product (e.g. C1BarCode, C1Studio Enterprise).
            
            Provides methods for:
            - generating new license keys (administrative task)
            - checking license key validity (used by installer and products)
            - generating and checking runtime keys (used by products)
            - installing/uninstalling licenses (used by installer)
            
            The install/uninstall code requires elevated permissions, and is
            used only by setups and utilities (not by controls). The code is 
            implemented in the ProductLicense.Installer.cs, which controls should
            not include since it won't be useful to them.
            
            When a product is sold, we send the user a license KEY. The user installs
            a license on his machine by providing his name, his company name, and the 
            key.
            
            The <see cref="P:C1.Util.Licensing.ProductLicense.Key"/> is a string in the following format:
            
                AAQYYCC-XX-NNNNNN-DD-DZZZZZZ
                
            Where:
            
                AA:     Product code (should match one of the products in the 
                        product catalog (see ProductInformation.GetProductCatalog()).
                Q:      Quarter when the license key was issued (1, 2, or 3)
                YY:     Year when the license key was issued (e.g., 10 for 2010)
                CC:     Order code, two chars that indicate whether this is a 
                        new sale, upgrade, renewal, special offer, etc.
                XX:     Hash code to ensure key validity.
                NNNNNN: Unique serial number.
                DDD:    Vendor code, three chars
                ZZZZZZ: Combination of random numbers for uniqueness and extra hash.
                
            </summary>
        </member>
        <member name="F:C1.Util.Licensing.VersionConst.VerString">
            <summary>
            WinForms version string representation (4 dot-delimited numbers).
            </summary>
        </member>
        <member name="F:C1.Util.Licensing.VersionConst.VersionStr">
            <summary>
            Same as <see cref="F:C1.Util.Licensing.VersionConst.VerString"/>.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.AssemblyNames">
            <summary>
            Specifies assembly name parts, used by AssemblyCommonInfo to generate actual assembly names.
            </summary>
        </member>
        <member name="M:GrapeCity.Common.GcNetFxLicenseProvider`1.VerifyDesignTimeEnvironment">
            <summary>
              Verify the environment to get whether the component is in design-time. 
            </summary>
            <returns>
              <c>true</c> if it is in design-time; otherwise <c>false</c>.
            </returns>
            <remarks>
              In DesignTime, because of IDE bugs, some component are not created with DesigntimeLicenseContext. 
              For example, when drag a control from Win Forms DataSource tool window, or use a web control in a ASP.NET Template.
              This may cause the control do run-time license validation and found that there is no license.
              To resolve this problem, we will check the environment and decide whether to do design-time license validation again.
            </remarks>
        </member>
        <member name="F:GrapeCity.Common.LicenseDialog`1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.Common.LicenseDialog`1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GrapeCity.Common.LicenseDialog`1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.Common.WinFormLicenseProvider`1">
            <summary>
              Represents a license provider of a Windows Forms PowerTools component.
            </summary>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseResource">
            <summary>
              Contains the resource for PowerToolsLicenseProvider
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.ErrorIcon">
            <summary>
              Gets the Error icon for license dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.InfoIcon">
            <summary>
              Gets the Info icon for license dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.WarningIcon">
            <summary>
              Gets the Warning icon for license dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.GrapeCityIcon">
            <summary>
              Gets the GrapeCity icon for license dialog.
            </summary>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetString(System.String)">
            <summary>
              Gets the localized string.
            </summary>
            <param name="name">
              The name of the string. It could be a const value in <see cref="T:GrapeCity.Common.Resources.LicenseResource"/>.
            </param>
            <returns>
              The localized string.
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetString(System.String,System.Object[])">
            <summary>
              Gets the localized string.
            </summary>
            <param name="name">
              The name of the string. It could be a const value in <see cref="T:GrapeCity.Common.Resources.LicenseResource"/>.
            </param>
            <param name="args">
              The data used in the string.
            </param>
            <returns>
              The localized string.
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetAssemblyFileVersion(System.Reflection.Assembly)">
            <summary>
              Get the file version description of the specified assembly.
            </summary>
            <param name="assembly">
              The <see cref="T:System.Reflection.Assembly"/> whose file version description should be get.
            </param>
            <returns>
              A <see cref="T:System.String"/> indicates the file version description of the specified assembly.
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetAssemblyName(System.Reflection.Assembly)">
            <summary>
              Get the name of the specified assembly.
            </summary>
            <param name="assembly">
              The <see cref="T:System.Reflection.Assembly"/> whose name should be get.
            </param>
            <returns>
              A <see cref="T:System.String"/> indicates the name of the specified assembly.
            </returns>
            <remarks>
              Please use this method to get assembly name. It is because that the Assembly.GetName method need FileIO permission.
            </remarks>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.FormatSerialKey(System.String)">
            <summary>
              Format the product key as "xxxx-xxxx-xxxx-xxxx-xxxx-xxxx".
            </summary>
            <param name="productKey">
              A <see cref="T:System.String"/> indicates the original product key which is a sequence of 24 digits.
            </param>
            <returns>
              A readable text indicates the product key.
            </returns>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseDialogKind">
            <summary>
              Represents the kind of license dialog.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Info">
            <summary>
              Info dialog. It is shown for a trial license.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Warning">
            <summary>
              Warning dialog. It is shown for a trial license which is expired.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Error">
            <summary>
              Error dialog. It is shown for an invalid license or other errors.
            </summary>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget">
            <summary>
              Represents the target web site for the link in license dialog.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.None">
            <summary>
              None target.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebFAQ">
            <summary>
              Goto web site http://www.grapecity.com/support/portal/.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebActivation">
            <summary>
              Goto web site http://www.grapecity.com/componentone/.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebShop">
            <summary>
              Goto web site http://www.grapecity.com/pricing/componentone/.
            </summary>
        </member>
    </members>
</doc>
